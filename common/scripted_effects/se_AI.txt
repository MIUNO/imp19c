## AI Behaviour scripts

# DIPLOMACY

### Testing commands (for use in explorer)

### Behaviour script

#### WAR

AI_pick_war_target = {
	# Scope: Country
	# Function: Pick the country which the AI is most likely to declare war on

	#random_country = {
	#	weight = {
#
#			modifier = {
#
#			}
#
#		}
#	}
}

#### DIPLOMATIC REASONING
# Mark out rivals
# There are different types of rivals depending on the balance of power
# The greater a country's power rating, the more rivals it can have

# RIVAL TYPES:
# Oppose - country should confront this rival head-on as a fight between equals
# Fear - country should seek the help of stronger nations against this rival 
# Domineer - Country should subsume this rival into their empire or sphere of influence
# Subvert - Country should knock down this rival's power

AI_add_rival = {

}

#### DIPLOMATIC INTEREST
# Mark areas as "interests" to control

AI_add_control_interest_all_countries_limited = {
	# Scope: Any
	# Function: Generate diplomatic interests for all countries above the threshhold
	# Normally, diplomatic interests should be generated ad-hoc for countries rather than all at once
	# Especially as this is a relatively demanding script in terms of performance
	every_country = {
		limit = {
			DIPLOMACY_power > AI_diplomacy_interest_cutoff_threshhold
		}
		AI_add_control_interest = yes
	}
}

AI_add_control_interest = {
	# Scope: Country
	# Function: Pick an area to mark as an interest and add it to the list in country scope
	# AI interests are areas that the AI will focus on accessing diplomatically
	# Methods of control include controlling the land directly or through a subject
	# TODO: Store a list of recently "blocked" interests, where the AI has either satisfied its goal or has been stopped and will look to try elsewhere
	#
	# Notes:
	# AI countries without interests as defined here will pick activities based on a much simpler decision tree based
	# e.g. "control pops of my culture and religion", or "control claims"
	# Local powers will also react to plays in their TZ differently, acting more protectively.

	save_scope_as = AI_root

	ordered_area = {
		limit = {

			# Limits based on any area in the province
			any_area_province = {

				# Must have land not owned by AI_root or its vassals
				NOT = {
					owner = {
						OR = {
							THIS = scope:AI_root
							scope:AI_root = THIS.overlord
						}
					}
				}

				# Adjacency required if AI_root is landlocked
				trigger_if = {
					limit = {
						scope:AI_root = {
							NOT = {
								any_owned_province = {
									is_coastal = yes
								}
							}
						}
					}
					any_neighbor_province = {
						owner = scope:AI_root
					}
				}

				# Only select coastal areas for overseas interests
				trigger_if = {
					limit = {
						NOT = {
							any_neighbor_province = {
								owner = scope:AI_root
							}
						}
					}
					is_coastal = yes
				}
				
			}
		}
		order_by = {
			value = {
				# Begin order_by value

				# BEGIN Values from provinces
				every_area_province = {
					# BEGIN FROM POPS
					every_pops_in_province = {
						# Same religion
						if = {
							limit = {
								pop_religion = scope:AI_root.religion
							}
							add = scope:AI_root.SPIRIT_piety
						}
						# Same culture
						if = {
							limit = {
								pop_culture = scope:AI_root.culture
							}
							add = scope:AI_root.SPIRIT_nationalism
						}
						# Similar culture
						else_if = {
							limit = {
								pop_culture_group = scope:AI_root.culture_group
							}
							add = {
								value = scope:AI_root.SPIRIT_nationalism
								divide = 2
							}
						}
					}
					# END FROM POPS
					# Tradegood desirability
					add = AI_interest_weighting_from_tradegood
					# Add how much population the province can support
					add = modifier:local_population_capacity
					# Encouraged to predate on low industrialisation provinces
					subtract = {
						value = civilization_value
						multiply = 20
					}
					# Discouraged coveting overlord's territory
					if = {
						limit = {
							owner = scope:AI_root.overlord
						}
						subtract = 1000
					}
					# Add value from intrinsic shipping modifiers (instead of adding raw shipping power, because AI interest is more about the potential of an area than its current value)
					if = {
						limit = {
							has_variable = natural_harbour
						}
						add = SHIPPING_natural_harbour_bonus
					}
					if = {
						limit = {
							has_variable = major_estuary
						}
						add = SHIPPING_major_estuary_bonus
					}
					if = {
						limit = {
							has_variable = trade_chokepoint
						}
						add = SHIPPING_trade_chokepoint_bonus
					}
					if = {
						limit = {
							has_minor_river = yes
						}
						add = SHIPPING_river_or_coast_bonus
					}
					# Discourage coveting allies' territory
					if = {
						limit = {
							owner = {
								alliance_with = scope:AI_root
							}
						}
						subtract = 250
					}
				}
				# Double the entire province score if this province is a claim of the AI_root
				if = {
					limit = {
						is_core_of = scope:AI_root
					}
					multiply = 2
				}
				# END Values from provinces
				# Turn this into an average province value for the area, so the bias is not towards purely larger areas
				divide = {
					every_area_province = {
						add = 1
					}
				}
				# From AI_root's DIPLOMACY_power in the area's TZ
				add = {
					value = 1
					if = {
						limit = {
							any_area_province = {
								india_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_india
					}
					else_if = {
						limit = {
							any_area_province = {
								east_north_america_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_east_north_america
					}
					else_if = {
						limit = {
							any_area_province = {
								west_north_america_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_west_north_america
					}
					else_if = {
						limit = {
							any_area_province = {
								caribbean_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_caribbean
					}
					else_if = {
						limit = {
							any_area_province = {
								west_south_america_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_west_south_america
					}
					else_if = {
						limit = {
							any_area_province = {
								east_south_america_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_east_south_america
					}
					else_if = {
						limit = {
							any_area_province = {
								south_east_asia_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_south_east_asia
					}
					else_if = {
						limit = {
							any_area_province = {
								indo_china_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_indo_china
					}
					else_if = {
						limit = {
							any_area_province = {
								yellow_sea_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_yellow_sea
					}
					else_if = {
						limit = {
							any_area_province = {
								southern_africa_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_southern_africa
					}
					else_if = {
						limit = {
							any_area_province = {
								west_africa_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_west_africa
					}
					else_if = {
						limit = {
							any_area_province = {
								east_africa_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_east_africa
					}
					else_if = {
						limit = {
							any_area_province = {
								middle_east_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_middle_east
					}
					else_if = {
						limit = {
							any_area_province = {
								western_steppe_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_western_steppe
					}
					else_if = {
						limit = {
							any_area_province = {
								eastern_steppe_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_eastern_steppe
					}
					else_if = {
						limit = {
							any_area_province = {
								upper_yangtzi_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_upper_yangtzi
					}
					else_if = {
						limit = {
							any_area_province = {
								atlantic_seaboard_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_atlantic_seaboard
					}
					else_if = {
						limit = {
							any_area_province = {
								central_europe_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_central_europe
					}
					else_if = {
						limit = {
							any_area_province = {
								west_mediterranean_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_west_mediterranean
					}
					else_if = {
						limit = {
							any_area_province = {
								baltic_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_baltic
					}
					else_if = {
						limit = {
							any_area_province = {
								east_europe_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_east_europe
					}
					else_if = {
						limit = {
							any_area_province = {
								east_mediterranean_tradezone = { PROVINCE = yes }
							}
						}
						add = scope:AI_root.var:DIPLOMACY_power_east_mediterranean
					}
				}
				 
				# Add weight if AI_root is not a major player in the TZ, but it aspires to be.
				# End order_by value
			}
		}

		max = {
			value = scope:AI_root.DIPLOMACY_power
			divide = AI_diplomacy_interest_cutoff_threshhold
			round = floor
		}

		

		# Currently here for testing - this is so that the tooltip can grab province area by scoping to a state
		random_area_province = {
			save_scope_as = AI_interest_target
		}

		scope:AI_root = {
			add_to_variable_list = {
				name = AI_interests_list
				target = scope:AI_interest_target
			}
		}
		
	}

	# TESTING PURPOSES ONLY - Saves just 1 interest var
	set_variable = {
		name = AI_interest
		value = scope:AI_interest_target
	}



	# TODO
	# Activate this once confirmed working
	#add_to_variable_list = {
	#	name = AI_interest_list
	#	target = scope:AI_interest_target
	#}
}

AI_begin_diplomatic_play = {
	# Scope: Country
	# Function: Begin a diplomatic play in an interest
	# Activities may be aimed at the area in general with no particular diplomatic target
	# OR
	# If multiple countries own territory in the area, the AI_root is most likely to engage diplomatically with the country which owns the most valuable province 
	# Province value = (tradegood output x tradegood value) + shipping power

	# Diplomatic plays may range from requesting a treaty for access to an area
	# To outright wars of conquest or espionage missions to subvert control of a rival

	# The play may range from controlling the area, to the whole region, to possibly the whole of a country which controls that area, depending on the relative strength of that country. For example, if a relatively low power country controls an area, the AI_root may target that entire control for control.
}



# ECONOMY

## CURRENCY
### Take out debt

## TAXES
### Change tax rates

# CONSTRUCTION

### Build buildings, as the government