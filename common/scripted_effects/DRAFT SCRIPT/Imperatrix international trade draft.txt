PURCHASE_generate_order_external = {
	# Scope: governorship
	# Function: check the name of the current tradezone and generate a purchaser order command with the appropriate tradezone
	if = {
		limit = {
			var:trade_center = {
				has_variable = is_india_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = india
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_east_north_america_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = east_north_america
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_west_north_america_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = west_north_america
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_caribbean_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = caribbean
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_west_south_america_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = west_south_america
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_east_south_america_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = east_south_america
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_south_east_asia_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = south_east_asia
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_indo_china_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = indo_china
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_yellow_sea_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = yellow_sea
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_southern_africa_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = southern_africa
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_west_africa_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = west_africa
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_east_africa_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = east_africa
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_middle_east_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = middle_east
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_western_steppe_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = western_steppe
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_eastern_steppe_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = eastern_steppe
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_upper_yangtzi_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = upper_yangtzi
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_atlantic_seaboard_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = atlantic_seaboard
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_central_europe_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = central_europe
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_west_mediterranean_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = west_mediterranean
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_baltic_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = baltic
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_east_europe_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = east_europe
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
	else_if = {
		limit = {
			var:trade_center = {
				has_variable = is_east_mediterranean_tradezone
			}
		}
		PURCHASE_order_external = {
			purchaser_TZ = east_mediterranean
			order_size = $order_size$
			tradegood = $tradegood$
			category = $category$
		}
	}
}

PURCHASE_order_external = {
	# Scope: governorship
	# Function: Buy from any external trade partner's tradezone

	# Format of arguments:
	# $for_stockpile$ = grain_stockpile, the stockpile in the governorship scope
	# $from_stockpile$ = grain_stockpile_external, the stockpile from the external trade scope with the sum of all goods available for external trade
	# $order_size$ = local variable, local_var:l_order_size
	# $external_sold_total$ = external_sold_total_grain

	debug_log = "Making a purchase order for  $tradegood$"

	# save_scope_as = purchaser_governorship # Moved back to check shopping

	# Set a local variable to record the price of the previous tradezone
	# Higher score is worse in terms of trade preference
	set_local_variable = {
		name = previous_score
		value = 999999
	}

	owner = { # ATM, countries in customs unions can only make individual trade deals with external nations - there's no way for the customs union to govern that just now.
		every_in_list = {
			variable = list_of_tradezones_in_trade_partners

			debug_log = "Iterating through list of tradezones in trade partners"

			# Get the total score of this tradezone
			# The score is the cost of the goods order plus the cost of transport
			set_local_variable = {
				name = l_this_total_score
				value = $order_size$
			}
			change_local_variable = {
				name = l_this_total_score
				multiply = var:local_price_$tradegood$
			}
			if = { # Only account for transport costs if they exist - i.e. not polling the local tradezone
				limit = {
					scope:purchaser_governorship.var:trade_center = {
						has_variable = here_to_$purchaser_TZ$_tradezone
					}
				}
				change_local_variable = {
					name = l_this_total_score
					add = var:here_to_$purchaser_TZ$_tradezone
				}
			}

			set_local_variable = {
				name = l_this_total_score_diff_previous
				value = local_var:l_this_total_score
			}

			change_local_variable = {
				name = l_this_total_score_diff_previous
				subtract = local_var:previous_score
			}

			if = {
				limit = {
					local_var:l_this_total_score_diff_previous < 0
				}
				debug_log = "Attempting to save preferred tradezone scope"
				save_scope_as = preferred_tradezone
			}

			set_local_variable = {
				name = previous_score
				value = local_var:l_this_total_score
			}
		}
	}

	PURCHASE_contact_supplier = { # We'll need a way to split the transfer and such across trade partner countries...
		mode = 1 # External
		order_size = $order_size$
		tradegood = $tradegood$
		category = $category$
	}

}


###########################################

PURCHASE_transfer_if_able = {
	# Scope: governorship
	# Function: check if there is a sufficient stockpile in the supplier variable
	debug_log = "Contacting tradezone  $tradezone$ "

	# Internal
	if = {
		limit = { mode = 0 }
		if = {
			limit = {
				var:internal_trade_scope = {
					has_variable = $tradegood$_stockpile_$tradezone$_tradezone
				}
			}
			set_local_variable = {
				name = i_demand_diff
				value = $order_size$
			}
			var:internal_trade_scope = {
				change_local_variable = {
					name = i_demand_diff
					subtract = var:$tradegood$_stockpile_$tradezone$_tradezone
				}
			}

			if = { # Only transfer the goods if they from stockpile is actually bigger than the order size
				limit = {
					local_var:i_demand_diff < 0 # If the supplier can't meet demand, the purchaser should try again on its next preferred supplier
				}
				# Add to the purchasing governorship's stockpile
				PURCHASE_transfer_goods_internally = {
					tradegood = $tradegood$
					amount = $order_size$
					category = $category$
					tradezone = $tradezone$
				}
				owner = {
					change_variable = {
						name = country_internal_total_ordered_$tradegood$ # Saves the total amount ordered - Note: not the total amount successfully purchased
						add = $order_size$
					}
				}

			}
		}
		else = {
			debug_log = "Internal trade scope did not have  $tradegood$ stockpile in  $tradezone$"
		}
	}
	
	# External
	else_if = {
		limit = { mode = 1 }
		if = {
			limit = {
				var:internal_trade_scope = {
					has_variable = $tradegood$_stockpile_$tradezone$_tradezone
				}
			}
			set_local_variable = {
				name = i_demand_diff
				value = $order_size$
			}
			var:internal_trade_scope = {
				change_local_variable = {
					name = i_demand_diff
					subtract = var:$tradegood$_stockpile_$tradezone$_tradezone
				}
			}

			if = { # Only transfer the goods if they from stockpile is actually bigger than the order size
				limit = {
					local_var:i_demand_diff < 0 # If the supplier can't meet demand, the purchaser should try again on its next preferred supplier
				}
				# Add to the purchasing governorship's stockpile
				PURCHASE_transfer_goods_internally = {
					tradegood = $tradegood$
					amount = $order_size$
					category = $category$
					tradezone = $tradezone$
				}
				owner = {
					change_variable = {
						name = country_internal_total_ordered_$tradegood$ # Saves the total amount ordered - Note: not the total amount successfully purchased
						add = $order_size$
					}
				}

			}
		}
		else = {
			debug_log = "Internal trade scope did not have  $tradegood$ stockpile in  $tradezone$"
		}
	}
}