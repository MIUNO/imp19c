DEMAND_set_demand_from_food_all = {
	# Scope: Governorship
	# Function: Set the food demand for all tradegoods which have demand from food need

	set_variable = {
		name = var_DEMAND_unfulfilled_food_need_governorship
		value = DEMAND_unfulfilled_food_need_governorship
	}

	DEMAND_set_demand_from_food = {
		tradegood = grain
	}
	DEMAND_set_demand_from_food = {
		tradegood = livestock
	}
	DEMAND_set_demand_from_food = {
		tradegood = temperate_fruit
	}
	DEMAND_set_demand_from_food = {
		tradegood = mediterranean_fruit
	}
	DEMAND_set_demand_from_food = {
		tradegood = tropical_fruit
	}
	DEMAND_set_demand_from_food = {
		tradegood = vegetables
	}
	DEMAND_set_demand_from_food = {
		tradegood = processed_foods
	}
	DEMAND_set_demand_from_food = {
		tradegood = fish
	}

}

DEMAND_set_demand_from_food = {
	# Scope: governorship
	# Function: Calculate demand from food for the given food tradegood in this governorship.
	# Sets a a var, DEMAND_food_$tradegood$
	# This may be additional to other sources of demand for this tradegood not from food.
	# DEMAND_$tradegood$ is ultimately used in PURCHASE_set_order_size to set the size of the order, after subtracting the size of the local tradegood stockpile
	# Takes arguments:
	# tradegood = the tradegood for which to calculate demand

	# This is a reimplementation of the demand svalues

	# The base of food demand is derived from essentials

	set_variable = {
		name = DEMAND_food_$tradegood$
		value = var:var_DEMAND_unfulfilled_food_need_governorship
	}

	if = {
		limit = {
			var:DEMAND_food_$tradegood$ > 0
		}
		change_variable = {
			name = DEMAND_food_$tradegood$
			divide = DEMAND_num_food_tradegoods
		}
	}

	set_local_variable = {
		name = l_DEMAND_$tradegood$_price_diff_to_food_mean
		value = var:trade_center.var:local_price_$tradegood$
	}

	change_local_variable = {
		name = l_DEMAND_$tradegood$_price_diff_to_food_mean
		divide = var:trade_center.var:PRICE_food_mean_normalised # Set by PRICE_set_food_mean_normalised_price
	}

	if = {
		limit = {
			# has_global_variable = first_time_price_setup_food_done
			DEMAND_$tradegood$ > 0
		}
		if = {
			limit = {
				NOT = { local_var:l_DEMAND_$tradegood$_price_diff_to_food_mean = 0 }
			}
			change_variable = {
				name = DEMAND_food_$tradegood$
				divide = local_var:l_DEMAND_$tradegood$_price_diff_to_food_mean
			}
		}
	}

	# The old system bounded this between a max of unfulfilled food need (i.e. demand minus local production) and a min of DEMAND_consumer_minus_produced_$tradegood$, but the order size effectively does this job by subtracting the local amount available before making an order.
	#if = {
	#	limit = { has_variable = previous_tick_food_demand_$tradegood$_110_percent }
	#	set_variable = {
	#		name = l_comparison_diff
	#		value = var:previous_tick_food_demand_$tradegood$_110_percent
	#	}
	#	change_variable = {
	#		name = l_comparison_diff
	#		subtract = var:DEMAND_food_$tradegood$
	#	}
	#	if = {
	#		limit = {
	#			var:l_comparison_diff < 0
	#		}
	#		set_variable = {
	#			name = var:DEMAND_food_$tradegood$
	#			value = var:previous_tick_food_demand_$tradegood$_110_percent
	#		}
	#	}
	#}

	

	#if = {
	#	limit = { has_variable = previous_tick_food_demand_$tradegood$_90_percent }
	#	set_variable = {
	#		name = l_comparison_diff
	#		value = var:DEMAND_food_$tradegood$
	#	}
	#	change_variable = {
	#		name = l_comparison_diff
	#		subtract = var:previous_tick_food_demand_$tradegood$_90_percent
	#	}
	#	if = {
	#		limit = {
	#			var:l_comparison_diff < 0
	#		}
	#		set_variable = {
	#			name = var:DEMAND_food_$tradegood$
	#			value = var:previous_tick_food_demand_$tradegood$_90_percent
	#		}
	#	}
	#} 

	set_variable = {
		name = previous_tick_food_demand_$tradegood$
		value = var:DEMAND_food_$tradegood$
	}

	set_variable = {
		name = previous_tick_food_demand_$tradegood$_110_percent
		value = var:DEMAND_food_$tradegood$
	}
	change_variable = {
		name = previous_tick_food_demand_$tradegood$_110_percent
		multiply = 1.1
	}

	set_variable = {
		name = previous_tick_food_demand_$tradegood$_90_percent
		value = var:DEMAND_food_$tradegood$
	}
	change_variable = {
		name = previous_tick_food_demand_$tradegood$_90_percent
		multiply = 0.9
	}


}

DEMAND_set_demand_from_luxury = {
	# Scope: governorship
	# Function: Count the amount of demand for the given luxury tradegood.
	# Sets a var, DEMAND_luxury_$tradegood$
	# Takes arguments:
	# Tradegood = the tradegood to calculate demand for
	set_variable = {
		name = DEMAND_luxury_$tradegood$
		value = DEMAND_luxury_base_total
	}

	if = {
		limit = {
			has_global_variable = first_time_price_setup_luxuries_done
			var:DEMAND_luxury_$tradegood$ > 0
		}
		set_local_variable = {
			name = l_$tradegood$_div_average_governorship_wealth
			value = var:trade_center.var:local_price_$tradegood$
		}
		change_local_variable = {
			name = l_$tradegood$_div_average_governorship_wealth
			divide = WEALTH_governorship_per_capita # TODO: Cache this value
		}
		change_variable = {
			name = DEMAND_luxury_$tradegood$
			divide = local_var:l_$tradegood$_div_average_governorship_wealth
		}
	}
	change_variable = {
		name = DEMAND_luxury_$tradegood$
		multiply = var:DEMAND_fashionability_$tradegood$
	}

	every_governorship_state = {
		every_state_province = {
			every_pops_in_province = {
				limit = {
					culture_is_infatuated = { tradegood = $tradegood$ }
				}
				change_variable = {
					name = DEMAND_luxury_$tradegood$
					add = 0.05 # Work on scale
				}
			}
		}
	}

}

DEMAND_set_demand_from_luxury_all = {
	DEMAND_set_demand_from_luxury = { tradegood = luxury_clothing }
	DEMAND_set_demand_from_luxury = { tradegood = luxury_furniture }
	DEMAND_set_demand_from_luxury = { tradegood = spices }
	DEMAND_set_demand_from_luxury = { tradegood = tobacco }
	DEMAND_set_demand_from_luxury = { tradegood = opium }
	DEMAND_set_demand_from_luxury = { tradegood = sugar }
	DEMAND_set_demand_from_luxury = { tradegood = gems }
	DEMAND_set_demand_from_luxury = { tradegood = chocolate }
	DEMAND_set_demand_from_luxury = { tradegood = salt }
	DEMAND_set_demand_from_luxury = { tradegood = alcohol }
}

DEMAND_set_demand_from_luxury_all_first_time = {
	DEMAND_set_demand_from_luxury = { tradegood = luxury_clothing }
	DEMAND_set_demand_from_luxury = { tradegood = luxury_furniture }
	DEMAND_set_demand_from_luxury = { tradegood = spices }
	DEMAND_set_demand_from_luxury = { tradegood = tobacco }
	DEMAND_set_demand_from_luxury = { tradegood = opium }
	DEMAND_set_demand_from_luxury = { tradegood = sugar }
	DEMAND_set_demand_from_luxury = { tradegood = gems }
	DEMAND_set_demand_from_luxury = { tradegood = chocolate }
	DEMAND_set_demand_from_luxury = { tradegood = salt }
	DEMAND_set_demand_from_luxury = { tradegood = alcohol }
	set_global_variable = first_time_price_setup_luxury_done
}

DEMAND_set_demand_from_industry_all = {
	# Scope: Governorship
	# Function: Set the demand generated for a tradegood from every industry, per industry present.
	# This should use the svalues for predefined demand levels, for consistency (see DEMAND_svalues). Values may be 0
	

	DEMAND_set_demand_from_industry = {
		tradegood = $tradegood$
		alcohol = 0 # TODO: Sort into alphabetical order of all industries
		furniture = 0
		luxury_furniture = 0
	}

	# WiP. Repeat, for every industry.

}

DEMAND_set_demand_from_industry = {
	set_variable = {
		name = DEMAND_$tradegood$_from_industry
		value = 0
	}
	DEMAND_set_demand_from_industry_step = {
		tradegood = $tradegood$
		industry = alcohol
		amount = $alcohol$
	}
	DEMAND_set_demand_from_industry_step = {
		tradegood = $tradegood$
		industry = furniture
		amount = $furniture$
	}
	DEMAND_set_demand_from_industry_step = {
		tradegood = $tradegood$
		industry = luxury_furniture
		amount = $luxury_furniture$
	}
	# etc...
}

DEMAND_set_demand_from_industry_step = {
	# Scope: Governorship
	# Function: Contains one step for updating industry demand, to decrease the number of lines needed in DEMAND_set_demand_from_industry
	if = { # alcohol
		limit = {
			INDUSTRY_factories_assigned_$industry$ > 0
		}
		set_local_variable = {
			name = l_DEMAND_$tradegood$_from_industry_$industry$
			value = INDUSTRY_factories_assigned_$industry$
		}
		if = {
			limit = { $amount$ > 0 }
			change_local_variable = {
				name = l_DEMAND_$tradegood$_from_industry_$industry$
				multiply = $industry$
			}
			change_variable = {
				name = DEMAND_$tradegood$_from_industry
				add = local_var:l_DEMAND_$tradegood$_from_industry_$industry$
			}
		}
	}
}

DEMAND_set_demand_from_pops = {
	set_variable = {
		name = DEMAND_$tradegood$_from_pops
		value = 0
	}

	DEMAND_set_demand_from_pops_step = {
		tradegood = $tradegood$
		lower_strata
	}
}

DEMAND_set_demand_from_pops_step = {
	# Scope: governorship
	# Function: Set how much the demand for a good from pops is, per poptype present in a governorship.
	# This should use the svalues for predefined demand levels, for consistency (see DEMAND_svalues). Values may be 0
	set_local_variable = {
		name = l_DEMAND_$tradegood$_from_lower_strata
		value = governorship_lower_strata
	}
	if = {
		limit = { $lower_strata$ > 0 }
		change_local_variable = {
			name = l_DEMAND_$tradegood$_from_lower_strata
			multiply = $lower_strata$
		}
		change_variable = {
			name = DEMAND_$tradegood$_from_pops
			add = local_var:l_DEMAND_$tradegood$_from_lower_strata
		}
	}

	# WiP. Repeat, for every poptype

}

DEMAND_set_demand = {
	# Scope: governorship
	# Function: Set the overall demand for a tradegood.
	set_variable = {
		name = DEMAND_$tradegood$
		value = 0
	}

	if = {
		limit = {
			has_variable = DEMAND_$tradegood$_from_food
		}
		change_variable = {
			name = DEMAND_$tradegood$
			add = var:DEMAND_$tradegood$_from_food
		}
	}

	if = {
		limit = {
			has_variable = DEMAND_$tradegood$_from_pops
		}
		change_variable = {
			name = DEMAND_$tradegood$
			add = var:DEMAND_$tradegood$_from_pops
		}
	}

	if = {
		limit = {
			has_variable = DEMAND_$tradegood$_from_industry
		}
		change_variable = {
			name = DEMAND_$tradegood$
			add = var:DEMAND_$tradegood$_from_industry
		}
	}

}