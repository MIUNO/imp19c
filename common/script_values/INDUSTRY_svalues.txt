# Scope: province

INDUSTRY_province_industry_capacity = { # Represent the province's capacity for industries to transport goods
	value = 1 # By default every province can support 1
	if = {
		limit = {
			OR = {
				terrain = extreme_mountain
				terrain = extreme_desert
				terrain = boreal_forest
			}
		}
		subtract = 4
	}
	if = {
		limit = {
			has_minor_river = yes
		}
		add = 1
	}
	if = {
		limit = {
			has_province_rank = city
		}
		add = 1
	}
	if = {
		limit = {
			has_province_rank = city_metropolis
		}
		add = 1
	}

	add = num_of_INF_canal
	add = num_of_INF_railway_upgrade
	add = num_of_port_building
	add = num_of_river_port_building

	# TODO - errors
	# add = INF_province_industry_capacity_bonus

	min = 0 # No reason to have negative industry capacity
}

INDUSTRY_free_province_industry_slots = {
	value = INDUSTRY_province_industry_capacity
	subtract = num_of_IND_industrial_estate
}

# Scope: governorship

INDUSTRY_governorship_total_industry_slots = {
	value = 0
	every_governorship_state ={
		every_state_province = {
			add = num_of_IND_industrial_estate
		}
	}
}

INDUSTRY_governorship_used_industry_slots = {
	value = 0
	if = {
		limit = {
			has_global_variable = wealth_setup_done
		}
		# add every variable for assigning industry slots to industries
		add = var:INDUSTRY_factories_assigned_clothing
		add = var:INDUSTRY_factories_assigned_luxury_clothing
		add = var:INDUSTRY_factories_assigned_furniture
		add = var:INDUSTRY_factories_assigned_luxury_furniture
		add = var:INDUSTRY_factories_assigned_alcohol
		add = var:INDUSTRY_factories_assigned_glass
		add = var:INDUSTRY_factories_assigned_chemicals
		add = var:INDUSTRY_factories_assigned_rare_alloys
		add = var:INDUSTRY_factories_assigned_construction_materials
		add = var:INDUSTRY_factories_assigned_early_munitions
		add = var:INDUSTRY_factories_assigned_late_munitions
		add = var:INDUSTRY_factories_assigned_naval_supplies
		add = var:INDUSTRY_factories_assigned_steel_ships
		add = var:INDUSTRY_factories_assigned_wooden_ships
		add = var:INDUSTRY_factories_assigned_steel
		add = var:INDUSTRY_factories_assigned_bronze
		add = var:INDUSTRY_factories_assigned_machine_parts
		add = var:INDUSTRY_factories_assigned_early_artillery
		add = var:INDUSTRY_factories_assigned_late_artillery
		add = var:INDUSTRY_factories_assigned_electronics
		add = var:INDUSTRY_factories_assigned_pharmaceuticals
		add = var:INDUSTRY_factories_assigned_motors
		add = var:INDUSTRY_factories_assigned_processed_foods
		add = var:INDUSTRY_factories_assigned_petrochemicals
	}
}

INDUSTRY_governorship_free_industry_slots = {
	value = INDUSTRY_governorship_total_industry_slots
	subtract = INDUSTRY_governorship_used_industry_slots
}

# Scope: governorship

# Variables to svalues

# Add...
# Here convert the variables storing the number of industry slots assigned to each industry
INDUSTRY_clothing_factories = {
	value = var:INDUSTRY_factories_assigned_clothing
}
INDUSTRY_luxury_clothing_factories = {
	value = var:INDUSTRY_factories_assigned_luxury_clothing
}
INDUSTRY_furniture_factories = {
	value = var:INDUSTRY_factories_assigned_furniture
}
INDUSTRY_luxury_furniture_factories = {
	value = var:INDUSTRY_factories_assigned_luxury_furniture
}
INDUSTRY_alcohol_factories = {
	value = var:INDUSTRY_factories_assigned_alcohol
}
INDUSTRY_glass_factories = {
	value = var:INDUSTRY_factories_assigned_glass
}
INDUSTRY_chemicals_factories = {
	value = var:INDUSTRY_factories_assigned_chemicals
}
INDUSTRY_rare_alloys_factories = {
	value = var:INDUSTRY_factories_assigned_rare_alloys
}
INDUSTRY_construction_materials_factories = {
	value = var:INDUSTRY_factories_assigned_construction_materials
}
INDUSTRY_early_munitions_factories = {
	value = var:INDUSTRY_factories_assigned_early_munitions
}
INDUSTRY_late_munitions_factories = {
	value = var:INDUSTRY_factories_assigned_late_munitions
}
INDUSTRY_naval_supplies_factories = {
	value = var:INDUSTRY_factories_assigned_naval_supplies
}
INDUSTRY_steel_ships_factories = {
	value = var:INDUSTRY_factories_assigned_steel_ships
}
INDUSTRY_wooden_ships_factories = {
	value = var:INDUSTRY_factories_assigned_wooden_ships
}
INDUSTRY_steel_factories = {
	value = var:INDUSTRY_factories_assigned_steel
}
INDUSTRY_bronze_factories = {
	value = var:INDUSTRY_factories_assigned_bronze
}
INDUSTRY_machine_parts_factories = {
	value = var:INDUSTRY_factories_assigned_machine_parts
}
INDUSTRY_early_artillery_factories = {
	value = var:INDUSTRY_factories_assigned_early_artillery
}
INDUSTRY_late_artillery_factories = {
	value = var:INDUSTRY_factories_assigned_late_artillery
}
INDUSTRY_electronics_factories = {
	value = var:INDUSTRY_factories_assigned_electronics
}
INDUSTRY_pharmaceuticals_factories = {
	value = var:INDUSTRY_factories_assigned_pharmaceuticals
}
INDUSTRY_motors_factories = {
	value = var:INDUSTRY_factories_assigned_motors
}
INDUSTRY_processed_foods_factories = {
	value = var:INDUSTRY_factories_assigned_processed_foods
}
INDUSTRY_petrochemicals_factories = {
	value = var:INDUSTRY_factories_assigned_petrochemicals
}

# Actual production values
# Scope: Governorship

#################################################
#################################################

## CLOTHING
INDUSTRY_production_rate_clothing = {
	value = 35
}

INDUSTRY_production_clothing_base = {
	value = INDUSTRY_production_rate_clothing
	multiply = INDUSTRY_clothing_factories
	if = {
		limit = {
			owner = {
				has_variable = production_bonus_clothing
			}
		}
		multiply = owner.var:production_bonus_clothing
	}
}

INDUSTRY_production_clothing = {
	# Applies modifiers from supply
	value = INDUSTRY_production_clothing_base
	multiply = INDUSTRY_production_clothing_multiplier
}

INDUSTRY_production_clothing_multiplier = {
	value = 1
	add = INDUSTRY_malus_clothing_production_textile_fibres
	add = INDUSTRY_malus_clothing_production_dye
	add = INDUSTRY_malus_clothing_production_livestock
	min = 0
}

INDUSTRY_production_clothing_efficiency = {
	value = INDUSTRY_production_clothing
	divide = INDUSTRY_production_clothing_base
}

# Ingredients

# Textile fibres

INDUSTRY_malus_clothing_production_textile_fibres = {
	value = 0
	if = {
		limit = {
			has_variable = shortage_textile_fibres
		}
		subtract = var:shortage_textile_fibres
		multiply = INDUSTRY_demand_importance_clothing_textile_fibres
	}
}

INDUSTRY_demand_importance_clothing_textile_fibres = {
	# As a percentage of the crucial ingredients
	value = 1
}

INDUSTRY_base_demand_clothing_textile_fibres = {
	value = 30
}

INDUSTRY_demand_clothing_textile_fibres = {
	value = INDUSTRY_clothing_factories
	multiply = INDUSTRY_base_demand_clothing_textile_fibres
}

# Dye

INDUSTRY_malus_clothing_production_dye = {
	value = 0
	if = {
		limit = {
			has_variable = shortage_dye
		}
		subtract = var:shortage_dye
		multiply = INDUSTRY_demand_importance_clothing_dye
	}
}

INDUSTRY_demand_importance_clothing_dye = {
	# As a percentage of the crucial ingredients
	value = 0.25
}

INDUSTRY_base_demand_clothing_dye = {
	value = 10
}

INDUSTRY_demand_clothing_dye = {
	value = INDUSTRY_clothing_factories
	multiply = INDUSTRY_base_demand_clothing_dye
}

# LIVESTOCK (LEATHER)

INDUSTRY_malus_clothing_production_livestock = {
	# The actual malus applied from shortages of the ingredient
	value = 0
	if = {
		limit = {
			has_variable = shortage_livestock
		}
		subtract = var:shortage_livestock
		multiply = INDUSTRY_demand_importance_clothing_livestock
	}
}

INDUSTRY_demand_importance_clothing_livestock = {
	# As a percentage of the crucial ingredients, this is the maximum malus (0-1) that can be applied to the output
	value = 0.15
}

INDUSTRY_base_demand_clothing_livestock = {
	# Units demanded per factory
	value = 5
}

INDUSTRY_demand_clothing_livestock = {
	# Actual units demanded
	value = INDUSTRY_clothing_factories
	multiply = INDUSTRY_base_demand_clothing_livestock
}

## LUXURY CLOTHING
INDUSTRY_production_rate_luxury_clothing = {
	# Base maximum output of one factory for this tradegood, at maximum productivity
	value = 35
}

INDUSTRY_production_luxury_clothing_base = {
	# Base output of all factories
	value = INDUSTRY_production_rate_luxury_clothing
	multiply = INDUSTRY_luxury_clothing_factories
	if = {
		limit = {
			owner = {
				has_variable = production_bonus_luxury_clothing
			}
		}
		multiply = owner.var:production_bonus_luxury_clothing
	}
}

INDUSTRY_production_luxury_clothing = {
	# Applies modifiers from supply
	value = INDUSTRY_production_luxury_clothing_base
	multiply = INDUSTRY_production_luxury_clothing_multiplier
}

INDUSTRY_production_luxury_clothing_multiplier = {
	# Base production, minus maluses from ingredient shortages. All ingredient maluses must be listed here
	value = 1
	add = INDUSTRY_malus_luxury_clothing_production_textile_fibres
	add = INDUSTRY_malus_luxury_clothing_production_dye
	add = INDUSTRY_malus_luxury_clothing_production_gold
	add = INDUSTRY_malus_luxury_clothing_production_silver
	add = INDUSTRY_malus_luxury_clothing_production_silk
	add = INDUSTRY_malus_luxury_clothing_production_livestock
	min = 0

}

INDUSTRY_production_luxury_clothing_efficiency = {
	# For displaying the production efficiency as a percentage of possible maximum
	value = INDUSTRY_production_luxury_clothing
	divide = INDUSTRY_production_luxury_clothing_base
}

# Ingredients

# TEXTILE FIBRES

INDUSTRY_malus_luxury_clothing_production_textile_fibres = {
	# The actual malus applied from shortages of the ingredient
	value = 0
	if = {
		limit = {
			has_variable = shortage_textile_fibres
		}
		subtract = var:shortage_textile_fibres
		multiply = INDUSTRY_demand_importance_luxury_clothing_textile_fibres
	}
}

INDUSTRY_demand_importance_luxury_clothing_textile_fibres = {
	# As a percentage of the crucial ingredients, this is the maximum malus (0-1) that can be applied to the output
	value = 1
}

INDUSTRY_base_demand_luxury_clothing_textile_fibres = {
	# Units demanded per factory
	value = 30
}

INDUSTRY_demand_luxury_clothing_textile_fibres = {
	# Actual units demanded
	value = INDUSTRY_luxury_clothing_factories
	multiply = INDUSTRY_base_demand_luxury_clothing_textile_fibres
}

# DYE

INDUSTRY_malus_luxury_clothing_production_dye = {
	# The actual malus applied from shortages of the ingredient
	value = 0
	if = {
		limit = {
			has_variable = shortage_dye
		}
		subtract = var:shortage_dye
		multiply = INDUSTRY_demand_importance_luxury_clothing_dye
	}
}

INDUSTRY_demand_importance_luxury_clothing_dye = {
	# As a percentage of the crucial ingredients, this is the maximum malus (0-1) that can be applied to the output
	value = 0.5
}

INDUSTRY_base_demand_luxury_clothing_dye = {
	# Units demanded per factory
	value = 15
}

INDUSTRY_demand_luxury_clothing_dye = {
	# Actual units demanded
	value = INDUSTRY_luxury_clothing_factories
	multiply = INDUSTRY_base_demand_luxury_clothing_dye
}

# GOLD

INDUSTRY_malus_luxury_clothing_production_gold = {
	# The actual malus applied from shortages of the ingredient
	value = 0
	if = {
		limit = {
			has_variable = shortage_gold
		}
		subtract = var:shortage_gold
		multiply = INDUSTRY_demand_importance_luxury_clothing_gold
	}
}

INDUSTRY_demand_importance_luxury_clothing_gold = {
	# As a percentage of the crucial ingredients, this is the maximum malus (0-1) that can be applied to the output
	value = 0.25
}

INDUSTRY_base_demand_luxury_clothing_gold = {
	# Units demanded per factory
	value = 10
}

INDUSTRY_demand_luxury_clothing_gold = {
	# Actual units demanded
	value = INDUSTRY_luxury_clothing_factories
	multiply = INDUSTRY_base_demand_luxury_clothing_gold
}

# TEMPLATE

INDUSTRY_malus_luxury_clothing_production_silver = {
	# The actual malus applied from shortages of the ingredient
	value = 0
	if = {
		limit = {
			has_variable = shortage_silver
		}
		subtract = var:shortage_silver
		multiply = INDUSTRY_demand_importance_luxury_clothing_silver
	}
}

INDUSTRY_demand_importance_luxury_clothing_silver = {
	# As a percentage of the crucial ingredients, this is the maximum malus (0-1) that can be applied to the output
	value = 0.2
}

INDUSTRY_base_demand_luxury_clothing_silver = {
	# Units demanded per factory
	value = 5
}

INDUSTRY_demand_luxury_clothing_silver = {
	# Actual units demanded
	value = INDUSTRY_luxury_clothing_factories
	multiply = INDUSTRY_base_demand_luxury_clothing_silver
}

# SILK

INDUSTRY_malus_luxury_clothing_production_silk = {
	# The actual malus applied from shortages of the ingredient
	value = 0
	if = {
		limit = {
			has_variable = shortage_silk
		}
		subtract = var:shortage_silk
		multiply = INDUSTRY_demand_importance_luxury_clothing_silk
	}
}

INDUSTRY_demand_importance_luxury_clothing_silk = {
	# As a percentage of the crucial ingredients, this is the maximum malus (0-1) that can be applied to the output
	value = 0.25
}

INDUSTRY_base_demand_luxury_clothing_silk = {
	# Units demanded per factory
	value = 10
}

INDUSTRY_demand_luxury_clothing_silk = {
	# Actual units demanded
	value = INDUSTRY_luxury_clothing_factories
	multiply = INDUSTRY_base_demand_luxury_clothing_silk
}

# LIVESTOCK (LEATHER)

INDUSTRY_malus_luxury_clothing_production_livestock = {
	# The actual malus applied from shortages of the ingredient
	value = 0
	if = {
		limit = {
			has_variable = shortage_livestock
		}
		subtract = var:shortage_livestock
		multiply = INDUSTRY_demand_importance_luxury_clothing_livestock
	}
}

INDUSTRY_demand_importance_luxury_clothing_livestock = {
	# As a percentage of the crucial ingredients, this is the maximum malus (0-1) that can be applied to the output
	value = 0.15
}

INDUSTRY_base_demand_luxury_clothing_livestock = {
	# Units demanded per factory
	value = 5
}

INDUSTRY_demand_luxury_clothing_livestock = {
	# Actual units demanded
	value = INDUSTRY_luxury_clothing_factories
	multiply = INDUSTRY_base_demand_luxury_clothing_livestock
}

# GEMS

INDUSTRY_malus_luxury_clothing_production_gems = {
	# The actual malus applied from shortages of the ingredient
	value = 0
	if = {
		limit = {
			has_variable = shortage_gems
		}
		subtract = var:shortage_gems
		multiply = INDUSTRY_demand_importance_luxury_clothing_gems
	}
}

INDUSTRY_demand_importance_luxury_clothing_gems = {
	# As a percentage of the crucial ingredients, this is the maximum malus (0-1) that can be applied to the output
	value = 0.2
}

INDUSTRY_base_demand_luxury_clothing_gems = {
	# Units demanded per factory
	value = 8
}

INDUSTRY_demand_luxury_clothing_gems = {
	# Actual units demanded
	value = INDUSTRY_luxury_clothing_factories
	multiply = INDUSTRY_base_demand_luxury_clothing_gems
}