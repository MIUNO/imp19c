# MODIFIERS

## EXPORT MODIFIERS

TRADE_country_export_stock_modifier = { # At the national level, modifies the amount of every governorship's stockpile that's available for trade
	# Range 0 - 1
	value = 1
	# Modified by laws defining how much of any tradegood's stockpile can be exported
	max = 1 # You can never sell more than 100% of your stockpile!
}

TRADE_governorship_export_stock_modifier = { # At the governorship level, modifies the amount of the present governorship's stockpile that's available for trade
	# Scope = governorship
	# Range 0 - 1
	value = 1
	# Modified by local ordnances
	max = 1 # You can never sell more than 100% of your stockpile!
}

### INFRASTRUCTURE LIMITS
# Infrastructure puts a hard cap on how much of any good a governorship can export/import
# This is a number of units, not a modifier
# the _svalue is converted into a variable at the start of every quarter to avoid recalculation
# The resulting variable, from a TRADE scripted effect, is used as a <max> for SELL and PURCHASE declarations

TRADE_governorship_infrastructure_capacity_svalue = {
	value = TRADE_canal_bonus
	add = TRADE_railway_bonus
	add = TRADE_port_bonus
	add = TRADE_river_port_bonus
}

# Bonuses from individual infrastructure buildings

TRADE_canal_bonus = {
	value = 0
	every_governorship_state = {
		every_province = {
			add = num_of_INF_canal
		}
	}	
}

TRADE_railway_bonus = {
	value = 0
	every_governorship_state = {
		every_province = {
			add = INF_railway_upgrade
			# Also add if there's a road... if possible.
		}
	}	
}

TRADE_port_bonus = {
	value = 0
	every_governorship_state = {
		every_province = {
			add = num_of_port_building
		}
	}
	multiply = 2	
}

TRADE_river_port_bonus = {
	value = 0
	every_governorship_state = {
		every_province = {
			add = num_of_river_port_building
		}
	}
	multiply = 2	
}

### EXPORT THRESHOLDS, do not sell any stock below this amount

TRADE_governorship_export_threshold_grain = { # The lower limit before a governorship is allowed to export any of this good. Should be derived from a variable
# FOR NOW, THIS IS JUST A TEST AND HAS NO VARIABLE FROM WHICH IT DERIVES
	value = 10
}

TRADE_governorship_export_threshold_mediterranean_fruit = { # The lower limit before a governorship is allowed to export any of this good. Should be derived from a variable
# FOR NOW, THIS IS JUST A TEST AND HAS NO VARIABLE FROM WHICH IT DERIVES
	value = 10
}

TRADE_governorship_export_threshold_glass = { # The lower limit before a governorship is allowed to export any of this good. Should be derived from a variable
# FOR NOW, THIS IS JUST A TEST AND HAS NO VARIABLE FROM WHICH IT DERIVES
	value = 10
}

### EXPORT CAPS - the maximum amount a governorship can sell

TRADE_governorship_export_cap_grain = { # The upper limit over which a governorship is NOT allowed to export any of this good. Should be derived from a variable
# FOR NOW, THIS IS JUST A TEST AND HAS NO VARIABLE FROM WHICH IT DERIVES
	value = 100
}

### INTERNAL EXPORT AMOUNTS

# Internal export will never offer more than the governorship can afford to sell without compromising its own demand, otherwise there would be a recursive loop of buying back what it oversold to other governorships.
# So this is basically the surplus
# If the country has the export focus, it will also subtract the amount for external export which has been reserved for international sale. This can (by design, to reflect exploitative colonial regimes) cause issues with a country not being able to properly supply itself internally as its goods are being reserved for external sale rather than being redistributed internally

TRADE_governorship_for_export_internal_grain = {
	# Scope: governorship
	value = GOODS_grain_stockpile
	subtract = DEMAND_grain
	if = {
		limit = {
			capital_scope.owner = { has_variable = trade_export_focus } # Could be has_law if we make this a law, TBD
		}
		subtract = TRADE_governorship_for_export_grain
	}
	min = 0
	# max = TRADE_governorship_infrastructure_capacity_svalue # DISABLED FOR TESTING
}

### ACTUAL AMOUNTS OFFERED FOR SALE

TRADE_governorship_for_export_grain = {
	value = TRADE_governorship_export_cap_grain # Sell up to cap
	max = var:grain_stockpile # Do not sell more than you have
	multiply = TRADE_country_export_stock_modifier
	multiply = TRADE_governorship_export_stock_modifier
	subtract = TRADE_governorship_export_threshold_grain # Keep up to threshold
}

#### GLOBAL PRICE SVALUES

TRADE_global_price_grain = {
	value = global_var:global_price_grain
}

### For use in tradezone local price calculations


#### Global total amount available to buy

TRADE_global_offered_grain = {
	value = 1 # To avoid dividing by 0
	every_in_list = {
		variable = list_of_trade_centers
		add = var:TZ_stockpile_grain
	}
}

#### Shares of supply

TRADE_share_of_global_grain_supply = {
	# Scope: Trade center province
	# Gets percentage in this TZ of global supply
	# Worth thinking about:
	# The global supply is amount produced...
	value = var:TZ_stockpile_grain
	divide = TRADE_global_offered_grain
}

### Shares of spends
#### Purpose: get the weighting for each spend that that each spender group should have
#### Used in TRADE_set_cost_shares scripted effect

# ESSENTIALS

TRADE_share_of_spend_essentials_upper_strata = {
	value = 100
}
TRADE_share_of_spend_essentials_middle_strata = {
	value = 100
}
TRADE_share_of_spend_essentials_lower_strata = {
	value = 100
}
TRADE_share_of_spend_essentials_proletariat = {
	value = 100
}
TRADE_share_of_spend_essentials_indentured = {
	value = 50 # Partially paid for by landowners
}
TRADE_share_of_spend_essentials_tribesmen = {
	value = 100
}
TRADE_share_of_spend_essentials_slaves = {
	value = 0 # Entirely paid for by landowners
}
TRADE_share_of_spend_essentials_the_state = {
	value = 0 # Consider subsidies as a value
}

# LUXURIES

TRADE_share_of_spend_luxuries_upper_strata = {
	value = 100
}
TRADE_share_of_spend_luxuries_middle_strata = {
	value = 60
}
TRADE_share_of_spend_luxuries_lower_strata = {
	value = 10
}
TRADE_share_of_spend_luxuries_proletariat = {
	value = 10
}
TRADE_share_of_spend_luxuries_indentured = {
	value = 0
}
TRADE_share_of_spend_luxuries_tribesmen = {
	value = 10
}
TRADE_share_of_spend_luxuries_slaves = {
	value = 0
}
TRADE_share_of_spend_luxuries_the_state = {
	value = 0 # Consider subsidies as a value
}

# BUSINESS GOODS
# This should have some conditions about who owns businesses based on laws. For testing purposes, the values are static

TRADE_share_of_spend_business_goods_upper_strata = {
	value = 100
}
TRADE_share_of_spend_business_goods_middle_strata = {
	value = 60
}
TRADE_share_of_spend_business_goods_lower_strata = {
	value = 20
}
TRADE_share_of_spend_business_goods_proletariat = {
	value = 10
}
TRADE_share_of_spend_business_goods_indentured = {
	value = 0
}
TRADE_share_of_spend_business_goods_tribesmen = {
	value = 0
}
TRADE_share_of_spend_business_goods_slaves = {
	value = 0
}
TRADE_share_of_spend_business_goods_the_state = {
	value = 0 # Consider subsidies as a value
}

# MILITARY
# This should have some conditions about who shoulders the cost for military. For testing purposes, the values are static/

TRADE_share_of_spend_military_upper_strata = {
	value = 0 # Consider feudalism as a way to add to this, or private military suppliers
}
TRADE_share_of_spend_military_middle_strata = {
	value = 0 # Consider self-armed militia as a way to add to this
}
TRADE_share_of_spend_military_lower_strata = {
	value = 0 # Consider self-armed militia as a way to add to this
}
TRADE_share_of_spend_military_proletariat = {
	value = 0 # Consider self-armed militia as a way to add to this
}
TRADE_share_of_spend_military_indentured = {
	value = 0
}
TRADE_share_of_spend_military_tribesmen = {
	value = 0 # Consider self-armed militia as a way to add to this
}
TRADE_share_of_spend_military_slaves = {
	value = 0
}
TRADE_share_of_spend_military_the_state = {
	value = 100
}