template portrait_x32y32bd_alpha_2
{
		modify_texture = {
			spriteborder = { 16 16 }
			spriteType = Corneredtiled
			texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha_2.dds"
			blend_mode = alphamultiply
		}
}

types NEW_WINDOW {
	type mp_country_button = button {
		clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_accordion"
		size = { 398 60 }
		using = brighten_red_background
		clicksound = "event:/SFX/UI/Province/sfx_ui_province_select"
		oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
		#block "tooltip" { tooltip = "FRAINTRO" }
		onclick = "[PdxGuiTriggerAllAnimations('unselect')]"
		block "On_click" {
		}
		block "onmouse" {
		}
		widget = {
			size = { 100% 100% }
			block "visible" { }
			background = {
				shaderfile = "gfx/FX/pdxgui_default.shader"
				using = green_background
			}
		}
		margin_widget = {
			margin = { 2 2 }
			size = { 100% 100% }
			margin_widget = {
				name = "background_black"
				size = { 100% 100% }
				parentanchor = right
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = black_background
					using = portrait_x32y32bd_alpha
				}
				icon = {
					size = { 272 100% }
					position = { 4 0 }
					parentanchor = right
					block "texture" { texture = "gfx/interface/images/background_load_save.dds" }
					spriteType = Corneredtiled
					#modify_texture = {
					#	texture = "gfx/interface/base_parts/gradient_black_invert.dds"
					#	blend_mode = alphamultiply
					#}
					modify_texture = {
						texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
						blend_mode = alphamultiply
					}
				}
			}
			country_flag = {
				name = "France"
				block "flag"
				{
					texture = "[GetCountry('FRA').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
					frame = "[GetCountry('FRA').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
					framesize = { 120 120 }
				}
				
				blockoverride "size"
				{
					size = { 56 56 }
				}
			}
			textbox = {
				position = { 60 0 }
				size = { 100% 34 }
				fontsize = 28
				font = HeaderFont
				#using = Highlight_FontColor
				using = Black_FontColor
				block "name" { text = "France" }
				alwaystransparent = yes
				multiline = yes
			}
		}
	}

	type mp_country_on_map = widget {
		size = { 100% 100% }
		icon = {
			size = { 100% 100% }
			using = portrait_x32y32bd_alpha_2
			#alpha = 0.75
			block "texture" { }
			block "color" {  }
			modify_texture = {
				blend_mode = alphamultiply
				block "texture" { }
			}
			modify_texture = {
				blend_mode = multiply
				alpha = 3
				block "texture" { }
			}
		}
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/base_parts/base_color.dds"
			using = portrait_x32y32bd_alpha_2
			alpha = 0.5
			block "visible" { }
			modify_texture = {
				blend_mode = alphamultiply
				block "texture" { }
			}
			modify_texture = {
				blend_mode = multiply
				alpha = 3
				block "texture" { }
			}
		}
		icon = {
			size = { 100% 100% }
			texture = "gfx/interface/base_parts/base_color.dds"
			using = portrait_x32y32bd_alpha_2
			alpha = 0.1
			visible = no
			modify_texture = {
				blend_mode = alphamultiply
				block "texture" {  }
			}
			block "animation_2" { }
		}
	}

	type mpwindow = widget {
		size = { 100% 100% }
		filter_mouse = left|wheel|right
		alwaystransparent = no
		movable = no
		state = {
			name = show_mp_window
			on_start = "[PdxGuiWidget.Show]"
		}
		state = {
			name = hide_mp_window
			on_start = "[PdxGuiWidget.Hide]"
		}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = black_background
		}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = pattern_black_background
			modify_texture = {
				texture = "gfx/interface/base_parts/background_x60bd_alpha_two_corner.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
		icon = {
			size = { 100% 100% }
			parentanchor = center
			texture = "gfx/interface/images/европа.png"
			using = portrait_x32y32bd_alpha_2
		}
		icon = {
			size = { 100% 100% }
			parentanchor = center
			texture = "gfx/interface/base_parts/background_texture.dds"
			alpha = 0.8
			modify_texture = {
				blend_mode = alphamultiply
				texture = "gfx/interface/base_parts/fade_bg_ingame_menu.dds"
			}
		}
		widget = {
			name = "country_images_on_map"
			#size = { 2048 1024 }
			size = { 1920 1080 }
			parentanchor = center
			mp_country_on_map = {
				name = "GBR"
				blockoverride "color" { color = "[GetCountry('GBR').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/GBR.png" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'GBR')]" }
				blockoverride "animation_2" {
					state = {
						name = gbr_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = gbr_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "PRU"
				blockoverride "color" { color = "[GetCountry('PRU').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/PRU.png" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'PRU')]" }
				blockoverride "animation_2" {
					state = {
						name = pru_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = pru_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "RUS"
				blockoverride "color" { color = "[GetCountry('RUS').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/RUS.png" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'RUS')]" }
				blockoverride "animation_2" {
					state = {
						name = rus_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = rus_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "FRA"
				blockoverride "color" { color = "[GetCountry('FRA').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/FRA.png" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'FRA')]" }
				blockoverride "animation_2" {
					state = {
						name = fra_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = fra_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
			mp_country_on_map = {
				name = "NED"
				blockoverride "color" { color = "[GetCountry('NED').GetMapColor]" }
				blockoverride "texture" { texture = "gfx/interface/images/maps/NED.png" }
				blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'NED')]" }
				blockoverride "animation_2" {
					state = {
						name = ned_anim_1
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = ned_anim_2
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
			}
		}
		widget = {
			size = { 398 886 }
			position = { 120 100 }
			flowcontainer = {
				parentanchor = hcenter
				position = { 0 30 }
				direction = vertical 
				spacing = 0

				icon = {
					name = "game_logo"
					parentanchor = hcenter
					texture = "gfx/frontend/game_logo.dds"
					scale = 0.8
					shaderfile = "gfx/FX/pdxgui_glow_game.shader"
				}
				flowcontainer = {
					direction = vertical
					spacing = 20
					parentanchor = hcenter
					margin_widget = {
						size = { 100% 80 }
						parentanchor = hcenter
					}
					flowcontainer = {
						direction = vertical
						spacing = 10
						mp_country_button = {
							blockoverride "name" { text = "Great Britain" }
							blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'GBR')]" }
							blockoverride "onmouse" {
								onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('gbr_anim_1')]"
								onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('gbr_anim_2')]"
							}
							blockoverride "On_click" {
								onclick = "[SetLobbyCountryTag('GBR')]"
							}
							blockoverride "flag"
							{
								texture = "[GetCountry('GBR').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
								frame = "[GetCountry('GBR').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
								framesize = { 120 120 }
							}
							blockoverride "texture" { texture = "gfx/interface/images/background/GBR.png" }
						}
						mp_country_button = {
							blockoverride "name" { text = "Prussia" }
							blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'PRU')]" }
							blockoverride "onmouse" {
								onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('pru_anim_1')]"
								onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('pru_anim_2')]"
							}
							blockoverride "On_click" {
								onclick = "[SetLobbyCountryTag('PRU')]"
							}
							blockoverride "flag"
							{
								texture = "[GetCountry('PRU').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
								frame = "[GetCountry('PRU').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
								framesize = { 120 120 }
							}
							blockoverride "texture" { texture = "gfx/interface/images/background/PRU.png" }
						}
						mp_country_button = {
							blockoverride "name" { text = "Russia" }
							blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'RUS')]" }
							blockoverride "onmouse" {
								onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('rus_anim_1')]"
								onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('rus_anim_2')]"
							}
							blockoverride "On_click" {
								onclick = "[SetLobbyCountryTag('RUS')]"
							}
							blockoverride "flag"
							{
								texture = "[GetCountry('RUS').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
								frame = "[GetCountry('RUS').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
								framesize = { 120 120 }
							}
							blockoverride "texture" { texture = "gfx/interface/images/background/RUS.png" }
						}
						mp_country_button = {
							blockoverride "name" { text = "France" }
							blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'FRA')]" }
							blockoverride "onmouse" {
								onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('fra_anim_1')]"
								onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('fra_anim_2')]"
							}
							blockoverride "On_click" {
								onclick = "[SetLobbyCountryTag('FRA')]"
							}
							blockoverride "flag"
							{
								texture = "[GetCountry('FRA').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
								frame = "[GetCountry('FRA').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
								framesize = { 120 120 }
							}
							blockoverride "texture" { texture = "gfx/interface/images/background/FRA.png" }
						}
						mp_country_button = {
							blockoverride "name" { text = "Netherlands" }
							blockoverride "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'NED')]" }
							blockoverride "onmouse" {
								onmousehierarchyenter = "[PdxGuiTriggerAllAnimations('ned_anim_1')]"
								onmousehierarchyleave = "[PdxGuiTriggerAllAnimations('ned_anim_2')]"
							}
							blockoverride "On_click" {
								onclick = "[SetLobbyCountryTag('NED')]"
							}
							blockoverride "flag"
							{
								texture = "[GetCountry('NED').AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
								frame = "[GetCountry('NED').AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
								framesize = { 120 120 }
							}
							blockoverride "texture" { texture = "gfx/interface/images/background/NED.png" }
						}
					}
					margin_widget = {
						size = { 100% 80 }
						parentanchor = hcenter
						text_button_square = {
							size = { 210 28 }
							parentanchor = vcenter|hcenter
							
							blockoverride "Center_text" 
							{
								text = "BACK"	
							}
							
							enabled = "[LobbyView.CanGoBack]"
							tooltip = "[LobbyView.GetGoBackToolTip]"
							blockoverride "On_click"
							{
								onclick = "[SetPreparationLobby('(bool)no')]"
								onclick = "[LobbyView.GoBack]"
							}
						}
					}
					margin_widget = {
						size = { 100% 80 }
						parentanchor = hcenter
						text_button_square = {
							size = { 210 28 }
							parentanchor = vcenter|hcenter

							blockoverride "Center_text" { text = "JOMINI_MULTIPLAYER_GUI_START" }
							using = tooltip_ne
							blockoverride "On_click" { 
								onclick = "[LobbyView.Start]" 
								clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
							}
							enabled = "[LobbyView.CanStart]"
							tooltip = "[LobbyView.StartToolTip]"
							visible = "[And(PlayerIsHost, And(GameIsMultiplayer,IsPreparationLobby))]"
							
						}
						text_button_square = {
							size = { 210 28 }
							parentanchor = vcenter|hcenter

							blockoverride "Center_text" { text = "JOMINI_MULTIPLAYER_GUI_START" }
							using = tooltip_ne
							blockoverride "On_click" { 
								onclick = "[GameLobby.StartGame]"
								onclick = "[LobbyView.Ready]"
								clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
							}
							enabled = "[LobbyView.CanControlSelected]"
							tooltip = "[LobbyView.GetControlToolTip]"
							visible = "[And(PlayerIsHost,And(Or(Not(GameIsMultiplayer),Not(IsPreparationLobby)),Or(LobbyView.HasSelectedPlayable,LobbyView.IsObserver)))]"		
						}
					}
				}
			}
		}
		widget = {
			size = { 50% 100% }
			parentanchor = right
			icon = {
				size = { 100% 100% }
				parentanchor = center
				texture = "gfx/interface/base_parts/background_texture.dds"
				alpha = 0.8
				modify_texture = {
					blend_mode = alphamultiply
					texture = "gfx/interface/base_parts/fade_bg_ingame_menu_right.dds"
				}
			}
		}
		part_sharp_base_window = {
			parentanchor = right|top
			alwaystransparent = no
			blockoverride "GradientAlpha" { 
				alpha = 0.35
				size = { 100% 100% }
			}
			size = { 432 860 }
			movable = no
			widget = {
				size = { 100% 50 }
				hbox = {
					using = MainWindowHeaderBox
					visible = "[LobbyView.HasSelectedPlayable]"
					blockoverride "Title_text" 
					{
						text = "[LobbyView.GetSelectedPlayable.GetCountry.GetName]"
					}
					blockoverride "White_buttons" {}
				}
				hbox = {
					using = MainWindowHeaderBox
					visible = "[Not(LobbyView.HasSelectedPlayable)]"
					blockoverride "Title_text" 
					{
						text = "SELECT_TITLE_SULLA_V"
					}
					blockoverride "White_buttons" {}
				}
			}
			widget = {
				size = { 117 176 }
				datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler]"
				portrait_button = {
					name = "monarchpic"
					size = { 117 176 }
					scale = 1.2
					position = { 0 45 }
					#parentanchor = bottom|left
					using = pt_button_large
					pop_out = yes
					#visible="[GovernmentView.GetPlayer.MakeScope.Var('monarch_character').IsSet]"
					
					portrait_texture = "[Character.GetPortrait('default', 'looking_left')]"
					panelka = { #capital
						size = { 160 32 }
						parentanchor = bottom
						position = { -2 16 }
						blockoverride "TextBox" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRulerTitle]" }
					}
					#tag = {
					#	position = { 0 160 }
					#	size = { 160 0}
					#	name = "MONARCH_NAME"
					#	multiline = no
					#	autoresize = no
					#	parentanchor = hcenter
					#	text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetNameWithNoTooltip]"
					#	using = BaseFontL
					#	using = Black_FontColor
					#	fontsize = 18
					#}
				}
				icon_card = {
					#visible = "[GovernmentView.GetPlayer.GetGovernment.IsRepublic]"
					size = { 40 40 }
					position = { 94 65 }
					parentanchor = bottom
					blockoverride "Icon"
					{
						texture = "[GetPartyIcon( Character.GetParty )]"
					}
					block "PartyIconVisibility" 
					{
						visible = "[Character.ShowParty]"
					}
					tooltip = "[Character.GetPartyTooltip]"
				}
			}
		}

		button = {
			size = { 50 50 }
			position = { 10 -10 }
			parentanchor = left|bottom
			tooltip = "hide"
			using = red_background
			onclick = "[PdxGuiTriggerAllAnimations('hide_mp_window')]"
		}
	}
}