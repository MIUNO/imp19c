@windowwidth = 1920
@windowheight = 1080

template portrait_x32y32bd_alpha_2
{
		modify_texture = {
			spriteborder = { 16 16 }
			spriteType = Corneredtiled
			texture = "gfx/interface/base_parts/portrait_x32y32bd_alpha_2.dds"
			blend_mode = alphamultiply
		}
}

types NEW_WINDOW {
	type text_area_date = textbox {
		size = { 100% 100% }
		fontsize = 70
		align = hcenter
		font = HeaderFont
		using = Highlight_FontColor
		block "text" { text = "1800" }
		state = {
			name = "hide_animation"
			alpha = 0
		}
	}


	type mp_select_country_map = widget {
		size = { 100% 100% }
		icon = {
			size = { 100% 100% }
			shaderfile = "gfx/FX/pdxgui_test_2.shader"
			alpha = 0.4
			block "texture" { }
			color = "[GetCountry(Country.GetTag).GetMapColor]"
			modify_texture = {
				blend_mode = alphamultiply
				block "texture" { }
			}
			modify_texture = {
				blend_mode = multiply
				alpha = 3
				block "texture" { }
			}
		}
		icon = {
			size = { 100% 100% }
			shaderfile = "gfx/FX/pdxgui_test_2.shader"
			texture = "gfx/interface/base_parts/base_color.dds"
			#shaderfile = "gfx/FX/pdxgui_glow_game.shader"
			alpha = 0.5
			visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, Country.GetTag)]"
			color = "[GetCountry(Country.GetTag).GetMapColor]"
			modify_texture = {
				blend_mode = alphamultiply
				block "texture" { }
			}
			modify_texture = {
				blend_mode = multiply
				alpha = 3
				block "texture" { }
			}
		}
		icon = {
			size = { 100% 100% }
			shaderfile = "gfx/FX/pdxgui_test_2.shader"
			texture = "gfx/interface/base_parts/base_color.dds"
			alpha = 0.1
			visible = "[GetVariableSystem.HasValue(Country.GetNameWithNoTooltip, 'on')]"
			modify_texture = {
				blend_mode = alphamultiply
				block "texture" {  }
			}
		}
		button = {
			size = { 128 128 }
			alpha = 0.5
			block "position" { }
			onclick = "[SetLobbyCountryTag(Country.GetTag)]"
			onmousehierarchyenter = "[GetVariableSystem.Set(Country.GetNameWithNoTooltip, 'on')]"
			onmousehierarchyleave = "[GetVariableSystem.Set(Country.GetNameWithNoTooltip, 'off')]"
			block "texture_coa" { } #BC2 (Линейный, DTX3) Ошибка диффузионного дизеринга
		}
		icon = {
			size = { 128 128 }
			alpha = 1
			visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, Country.GetTag)]"
			block "position" { }
			block "texture_coa" { }
		}
	}

	type mp_select_tab = widget {
		size = { 1730 100% }
		parentanchor = hcenter
		widget = {
			size = { 100% 865 }
			parentanchor = center
			icon = {
				size = { 100% 100% }
				shaderfile = "gfx/FX/pdxgui_test_2.shader"
				position = { 0 87 }
				block "map_texture" { }
				state = {
					name = show_mp_window
					on_start = "[PdxGuiWidget.Show]"
				}
				state = {
					name = hide_mp_window
					on_start = "[PdxGuiWidget.Hide]"
				}
			}
			widget = {
				size = { 100% 100% }
				position = { 0 87 }
				block "countries" { }
				state = {
					name = show_mp_window
					on_start = "[PdxGuiWidget.Show]"
				}
				state = {
					name = hide_mp_window
					on_start = "[PdxGuiWidget.Hide]"
				}
			}
			# logo
			icon = {
				size = { 128 128 }
				position = { 195 105 }
				alpha = 0.5
				using = beige_background
				shaderfile = "gfx/FX/pdxgui_test_2.shader"
				modify_texture = {
					blend_mode = alphamultiply
					texture = "gfx/interface/images/logo_a.png"
				}
			}
		}
	}

	type mp_select_button = widget {
		size = { 280 50 }
		button = {
			using = black_background
			gfxtype = buttongfx
			size = { 100% 100% }
			alpha = 0.5
			block "On_click" { onclick = "[SetLobbyCountryTag(Country.GetTag)]" }
			onmousehierarchyenter = "[GetVariableSystem.Set(Country.GetNameWithNoTooltip, 'on')]"
			onmousehierarchyleave = "[GetVariableSystem.Set(Country.GetNameWithNoTooltip, 'off')]"
			widget = {
				size = { 100% 100% }
				alpha = 2.0
				block "visible" { visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, Country.GetTag)]" }
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = green_background
				}
			}
			widget = {
				size = { 100% 100% }
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = portrait_x32y32bd_alpha
					using = beige_background
					modify_texture = {
						texture = "gfx/interface/base_parts/button_vignette.dds"
						blend_mode = alphamultiply
						spriteType = corneredtiled
						spriteborder = { 20 20 }
					}
				}
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = portrait_x32y32bd_alpha
					using = beige_background
					alpha = 0.3
					modify_texture = {
						texture = "gfx/interface/base_parts/button_vignette.dds"
						blend_mode = alphamultiply
						spriteType = corneredtiled
						spriteborder = { 20 20 }
					}
				}
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = black_background
					using = portrait_x32y32bd_alpha
					alpha = 2.0
					margin = { -3 -3 }
				}
				background = {
					shaderfile = "gfx/FX/pdxgui_default.shader"
					using = portrait_x32y32bd_alpha
					using = beige_background
					alpha = 0.15
					margin = { -3 -3 }
					modify_texture = {
						texture = "gfx/interface/base_parts/gradient_black_invert.dds"
						blend_mode = alphamultiply
					}
				}
			}
		}
		flowcontainer = {
			margin = { 5 0 }
			spacing = 5
			new_country_flag = {
				blockoverride "Size" { size = { 50 50 } }
				blockoverride "On_click" { onclick = "[SetLobbyCountryTag(Country.GetTag)]" }
				state = {
					name = show_mp_window
					on_start = "[PdxGuiWidget.Show]"
				}
				state = {
					name = hide_mp_window
					on_start = "[PdxGuiWidget.Hide]"
				}
			}
			textbox = {
				minimumsize = { 0 50 }
				block "name" { text = "[Country.GetNameWithNoTooltip]" }
				max_width = 170
				elide = right				
				align = left|nobaseline
				using = BaseFontM
				using = White_FontColor
				fontsize_min = 14
				autoresize = yes
			}
		}
	}

	type mp_select_country_map_coa = widget {
		size = { 100% 100% }
		button = {
			size = { 128 128 }
			alpha = 0.5
			block "position" { }
			onclick = "[SetLobbyCountryTag(Country.GetTag)]"
			onmousehierarchyenter = "[GetVariableSystem.Set(Country.GetNameWithNoTooltip, 'on')]"
			onmousehierarchyleave = "[GetVariableSystem.Set(Country.GetNameWithNoTooltip, 'off')]"
			block "texture_coa" { } #BC2 (Линейный, DTX3) Ошибка диффузионного дизеринга
		}
		icon = {
			size = { 128 128 }
			alpha = 1
			visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, Country.GetTag)]"
			block "position" { }
			block "texture_coa" { }
		}
	}

	type mp_select_tab_top = widget {
		size = { 1730 100% }
		parentanchor = hcenter
		widget = {
			size = { 100% 865 }
			parentanchor = center
			widget = {
				size = { 100% 100% }
				position = { 0 87 }
				block "countries" { }
				state = {
					name = show_mp_window
					on_start = "[PdxGuiWidget.Show]"
				}
				state = {
					name = hide_mp_window
					on_start = "[PdxGuiWidget.Hide]"
				}
			}
		}
		base_window = {
			size = { 420 70 }
			parentanchor = hcenter
			filter_mouse = left|right
			alwaystransparent = no
			blockoverride "GradientAlpha" { alpha = 0.0 }
			movable = no
			flowcontainer = {
				spacing = 5
				position = { 0 10 }
				parentanchor = hcenter
				text_button_square = {
					blockoverride "Center_text" {
						using = HeaderFont
						fontsize = 30
						text = "<"
					}
					blockoverride "On_click" { block "left_button" { } }
					block "left_tooltip" { }
					size = { 40 40 }
				}
				widget = {
					size = { 300 36 }
					parentanchor = vcenter
					using = background_widget
					textbox = {
						size = { 100% 100% }
						block "name" { text = "europe" }
						elide = right
						align = center
						using = HeaderFont
						using = White_FontColor
					}
				}
				text_button_square = {
					blockoverride "Center_text" {
						using = HeaderFont
						fontsize = 30
						text = ">"
					}
					blockoverride "On_click" { block "right_button" { } }
					block "right_tooltip" { }
					size = { 40 40 }
				}
			}
		}
	}

	type mp_select_right_panel = flowcontainer {
		direction = vertical
		spacing = 5
		flowcontainer = {
			using = background_widget
			margin = { 5 5 }
			direction = vertical
			sub_header = {
				size = { 290 32 }
				blockoverride "Title_text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRulerTitle]" }
			}
			flowcontainer = {
				margin_top = 10
				spacing = 3
				icon_and_text = {
					size = { 70 32 }
					blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/military.dds" }
					blockoverride "Text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetMartial]" }
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetMartialToolTip]"
				}
				icon_and_text = {
					size = { 70 32 }
					blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/civic.dds" }
					blockoverride "Text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetFinesse]" }
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetFinesseToolTip]"
				}
				icon_and_text = {
					size = { 70 32 }
					blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/oratory.dds" }
					blockoverride "Text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetCharisma]" }
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetCharismaToolTip]"
				}
				icon_and_text = {
					size = { 70 32 }
					blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/religious.dds" }
					blockoverride "Text" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetZeal]" }
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetZealToolTip]"
				}
			}
			flowcontainer = {
				margin_top = 5
				block "cards" { }
			}
			widget = {
				size = { 290 32 }
				sub_header = {
					size = { 100% 32 }
					blockoverride "Title_text" { text = "Playing cards" }
				}
			}
		}
		textbox = {
			size = { 100% 40 }
			text = "mp_description"
			using = HeaderFont
			fontsize = 28
			fontcolor = { 1 1 1 1 }
			align = hcenter|top
		}
		widget = {
			size = { 100% 300 }
			textbox = {
				size = { 100% 100% }
				using = BaseFontS
				using = Black_FontColor
				parentanchor = top|left
				autoresize = yes
				align = hcenter|top
				multiline = yes
				minimumsize = { 290 -1 }
				maximumsize = { 290 -1 }
				block "description" { }
			}
		}
	}

	type mp_window_select = widget {
		size = { 100% 100% }
		filter_mouse = left|wheel|right
		alwaystransparent = no
		alpha = 1
		state = { 
			name = _show
			duration = 0.5
			alpha = 1
		}
		state = {
			name = _hide
			duration = 0.5
			alpha = 0
		}
		state = {
			name = show_mp_window
			on_start = "[PdxGuiWidget.Show]"
		}
		state = {
			name = hide_mp_window
			on_start = "[PdxGuiWidget.Hide]"
		}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = black_background
		}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			using = pattern_black_background
			modify_texture = {
				texture = "gfx/interface/base_parts/background_x60bd_alpha_two_corner.dds"
				blend_mode = alphamultiply
				spriteType = Corneredtiled
				spriteborder = { 60 60 }
			}
		}
		icon = {
			size = { @windowwidth @windowheight }
			parentanchor = center
			alpha = 0.5
			texture = "gfx/interface/images/map.dds"
			using = portrait_x32y32bd_alpha_2
		}
		#widget = {
		#	size = { 1400 1000 }
		#	parentanchor = center
		#	background = {
		#		shaderfile = "gfx/FX/pdxgui_default.shader"
		#		using = black_background
		#	}
		#}
		mp_select_tab = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'europe')]"
			blockoverride "map_texture" { texture = "gfx/interface/images/mp_select/maps/europe.png" }
			blockoverride "countries" {
				mp_select_country_map = {
					datacontext = "[GetCountry('GBR')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/GBR.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('PRU')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/PRU.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('RUS')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/RUS.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('FRA')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/FRA.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('NED')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/NED.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('AUS')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/AUS.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('SAR')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/SAR.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('SPA')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/SPA.png" }
				}
			}
		}
		mp_select_tab = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'middle_east')]"
			blockoverride "map_texture" { texture = "gfx/interface/images/mp_select/maps/middle_east.png" }
			blockoverride "countries" {
				mp_select_country_map = {
					datacontext = "[GetCountry('TUR')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/TUR.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('EGY')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/EGY.png" }
				}
			}
		}
		mp_select_tab = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'south_asia')]"
			blockoverride "map_texture" { texture = "gfx/interface/images/mp_select/maps/south_asia.png" }
			blockoverride "countries" {
				mp_select_country_map = {
					datacontext = "[GetCountry('EIC')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/EIC.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('KHL')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/KHL.png" }
				}
			}
		}
		mp_select_tab = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'east_asia')]"
			blockoverride "map_texture" { texture = "gfx/interface/images/mp_select/maps/east_asia.png" }
			blockoverride "countries" {
				mp_select_country_map = {
					datacontext = "[GetCountry('CHI')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/CHI.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('TKG')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/TKG.png" }
				}
			}
		}
		mp_select_tab = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'central_america')]"
			blockoverride "map_texture" { texture = "gfx/interface/images/mp_select/maps/central_america.png" }
			blockoverride "countries" {
				mp_select_country_map = {
					datacontext = "[GetCountry('VNZ')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/VNZ.png" }
				}
				mp_select_country_map = {
					datacontext = "[GetCountry('MEX')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/MEX.png" }
				}
			}
		}
		mp_select_tab = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'north_america')]"
			blockoverride "map_texture" { texture = "gfx/interface/images/mp_select/maps/north_america.png" }
			blockoverride "countries" {
				mp_select_country_map = {
					datacontext = "[GetCountry('USA')]"
					blockoverride "texture" { texture = "gfx/interface/images/mp_select/countries/USA.png" }
				}
			}
		}
		widget = {
			name = "3Dmodel"
			size = { 100% 100% }
			parentanchor = center
			state = {
				name = show_mp_window
				on_start = "[PdxGuiWidget.Show]"
			}
			state = {
				name = hide_mp_window
				on_start = "[PdxGuiWidget.Hide]"
			}
			frame_select_window = {
				size = { 100% 100% }
			}
		}
		mp_select_tab_top = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'europe')]"
			blockoverride "name" { text = "mp_select_tab_europe" }
			blockoverride "left_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'north_america')]" }
			blockoverride "left_tooltip" { tooltip = "mp_select_tt_north_america" }
			blockoverride "right_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'middle_east')]" }
			blockoverride "right_tooltip" { tooltip = "mp_select_tt_middle_east" }
			blockoverride "countries" {
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('GBR')]"
					blockoverride "position" { position = { 450 200 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/GBR.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('PRU')]"
					blockoverride "position" { position = { 610 400 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/PRU.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('RUS')]"
					blockoverride "position" { position = { 1000 300 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/RUS.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('FRA')]"
					blockoverride "position" { position = { 340 540 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/FRA.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('NED')]"
					blockoverride "position" { position = { 400 400 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/NED.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('AUS')]"
					blockoverride "position" { position = { 630 530 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/AUS.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('SAR')]"
					blockoverride "position" { position = { 460 610 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/SAR.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('SPA')]"
					blockoverride "position" { position = { 210 780 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/SPA.dds" }
				}
			}
		}
		mp_select_tab_top = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'middle_east')]"
			blockoverride "name" { text = "mp_select_tab_middle_east" }
			blockoverride "left_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'europe')]" }
			blockoverride "left_tooltip" { tooltip = "mp_select_tt_europe" }
			blockoverride "right_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'south_asia')]" }
			blockoverride "right_tooltip" { tooltip = "mp_select_tt_south_asia" }
			blockoverride "countries" {
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('TUR')]"
					blockoverride "position" { position = { 200 100 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/TUR.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('EGY')]"
					blockoverride "position" { position = { 280 450 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/TUR.dds" }
				}
			}
		}
		mp_select_tab_top = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'south_asia')]"
			blockoverride "name" { text = "mp_select_tab_south_asia" }
			blockoverride "left_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'middle_east')]" }
			blockoverride "left_tooltip" { tooltip = "mp_select_tt_middle_east" }
			blockoverride "right_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'east_asia')]" }
			blockoverride "right_tooltip" { tooltip = "mp_select_tt_east_asia" }
			blockoverride "countries" {
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('EIC')]"
					blockoverride "position" { position = { 270 400 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/EIC.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('KHL')]"
					blockoverride "position" { position = { 150 10 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/KHL.dds" }
				}
			}
		}
		mp_select_tab_top = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'east_asia')]"
			blockoverride "name" { text = "mp_select_tab_east_asia" }
			blockoverride "left_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'south_asia')]" }
			blockoverride "left_tooltip" { tooltip = "mp_select_tt_south_asia" }
			blockoverride "right_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'central_america')]" }
			blockoverride "right_tooltip" { tooltip = "mp_select_tt_central_america" }
			blockoverride "countries" {
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('CHI')]"
					blockoverride "position" { position = { 450 250 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/CHI.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('TKG')]"
					blockoverride "position" { position = { 960 360 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/TKG.dds" }
				}
			}
		}
		mp_select_tab_top = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'central_america')]"
			blockoverride "name" { text = "mp_select_tab_central_america" }
			blockoverride "left_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'east_asia')]" }
			blockoverride "left_tooltip" { tooltip = "mp_select_tt_east_asia" }
			blockoverride "right_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'north_america')]" }
			blockoverride "right_tooltip" { tooltip = "mp_select_tt_north_america" }
			blockoverride "countries" {
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('VNZ')]"
					blockoverride "position" { position = { 750 600 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/VNZ.dds" }
				}
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('MEX')]"
					blockoverride "position" { position = { 300 400 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/MEX.dds" }
				}
			}
		}
		mp_select_tab_top = {
			visible = "[GetVariableSystem.HasValue('mp_select_tab', 'north_america')]"
			blockoverride "name" { text = "mp_select_tab_north_america" }
			blockoverride "left_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'central_america')]" }
			blockoverride "left_tooltip" { tooltip = "mp_select_tt_central_america" }
			blockoverride "right_button" { onclick = "[GetVariableSystem.Set('mp_select_tab', 'europe')]" }
			blockoverride "right_tooltip" { tooltip = "mp_select_tt_europe" }
			blockoverride "countries" {
				mp_select_country_map_coa = {
					datacontext = "[GetCountry('USA')]"
					blockoverride "position" { position = { 600 400 } }
					blockoverride "texture_coa" { texture = "gfx/interface/images/mp_select/coa/USA.dds" }
				}
			}
		}
		#left panel
		icon = {
			size = { 600 @windowheight }
			parentanchor = left
			texture = "gfx/interface/base_parts/background_texture.dds"
			alpha = 0.8
			modify_texture = {
				blend_mode = alphamultiply
				texture = "gfx/interface/base_parts/fade_bg_ingame_menu.dds"
			}
		}
		flowcontainer = {
			direction = vertical
			spacing = 10
			parentanchor = left|vcenter
			margin_left = 20
			flowcontainer = {
				direction = vertical
				spacing = 5
				mp_select_button = {
					datacontext = "[GetCountry('000')]"
					blockoverride "name" { text = "Play as any country" }
					blockoverride "visible" { visible = no }
					blockoverride "On_click" {
						onclick = "[PdxGuiTriggerAllAnimations('hide_mp_window')]"
						onclick = "[PanToCountry(GetCountry('GBR').Self)]"
					}
					blockoverride "Flag"
					{
						texture = "gfx/interface/images/any_country.dds"
					}
				}
				textbox = {
					size = { 280 50 }
					text = "mp_recommended_countries"
					using = HeaderFont
					using = White_FontColor
					fontsize = 20
					align = center
				}
				scrollarea = {
					size = { 295 500 }
					scrollbarpolicy_horizontal = always_off
					#scrollbarpolicy_vertical = always_on
					#using = VerticalScrollAreaCutOff
					scrollbar_vertical = {
						using = VerticalScrollBar
					}
					
					scrollwidget = {
						flowcontainer = {
							ignoreinvisible = yes
							flowcontainer = {
								visible = "[GetVariableSystem.HasValue('mp_select_tab', 'europe')]"
								direction = vertical
								spacing = 5
								mp_select_button = {
									datacontext = "[GetCountry('GBR')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('PRU')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('RUS')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('FRA')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('NED')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('AUS')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('SAR')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('SPA')]"
								}
							}
							flowcontainer = {
								visible = "[GetVariableSystem.HasValue('mp_select_tab', 'middle_east')]"
								direction = vertical
								spacing = 5
								mp_select_button = {
									datacontext = "[GetCountry('TUR')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('EGY')]"
								}
							}
							flowcontainer = {
								visible = "[GetVariableSystem.HasValue('mp_select_tab', 'south_asia')]"
								direction = vertical
								spacing = 5
								mp_select_button = {
									datacontext = "[GetCountry('EIC')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('KHL')]"
								}
							}
							flowcontainer = {
								visible = "[GetVariableSystem.HasValue('mp_select_tab', 'east_asia')]"
								direction = vertical
								spacing = 5
								mp_select_button = {
									datacontext = "[GetCountry('CHI')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('TKG')]"
								}
							}
							flowcontainer = {
								visible = "[GetVariableSystem.HasValue('mp_select_tab', 'central_america')]"
								direction = vertical
								spacing = 5
								mp_select_button = {
									datacontext = "[GetCountry('VNZ')]"
								}
								mp_select_button = {
									datacontext = "[GetCountry('MEX')]"
								}
							}
							flowcontainer = {
								visible = "[GetVariableSystem.HasValue('mp_select_tab', 'north_america')]"
								direction = vertical
								spacing = 5
								mp_select_button = {
									datacontext = "[GetCountry('USA')]"
								}	
							}
						}
					}
				}
			}
		}

		#right panel
		icon = {
			size = { 600 @windowheight }
			parentanchor = right
			texture = "gfx/interface/base_parts/background_texture.dds"
			alpha = 0.8
			modify_texture = {
				blend_mode = alphamultiply
				texture = "gfx/interface/base_parts/fade_bg_ingame_menu_right.dds"
			}
		}
		flowcontainer = {
			direction = vertical
			parentanchor = right|vcenter
			margin = { 10 0 }
			visible = "[LobbyView.HasSelectedPlayable]"
			textbox = {
				size = { 300 100 }
				fontsize = 50
				align = hcenter|bottom
				#font = NewHeaderFont
				font = HeaderFont
				using = Highlight_FontColor
				block "name" { text = "[LobbyView.GetSelectedPlayable.GetCountry.GetNameWithNoTooltip]" }
				multiline = yes
			}
			flowcontainer = {
				parentanchor = hcenter
				spacing = 13
				modifier_icon = {
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetHeritage.GetModifier]"
					size = { 62 62 }
					parentanchor = vcenter
					tooltipwidget = { 
						heritage_pop_out = {
							datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetHeritage]"
						}
					}
				}
				new_country_banner = { #flag
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry]"
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetRankInformation]"
					blockoverride "Size" { size = { 150 150 } }
					state = {
						name = show_mp_window
						on_start = "[PdxGuiWidget.Show]"
					}
					state = {
						name = hide_mp_window
						on_start = "[PdxGuiWidget.Hide]"
					}
				}
				religion = {
					blockoverride "size" { size = { 62 62 } }
					blockoverride "datacontext" { datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetReligion]" }
					parentanchor = vcenter
					tooltip = "[LobbyView.GetSelectedPlayable.GetCountry.GetReligion.GetTooltip]"
				}
			}
			flowcontainer = {
				direction = vertical
				ignoreinvisible = yes
				flowcontainer = {
					datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler]"
					margin_right = 15
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						texture = "[GetCharacterBackgroundIconHuge( Character.Self, Character.GetLocation.GetTerrain )]"
						using = portrait_x32y32bd_alpha
						spriteType = Corneredtiled
						margin_top = 30
						#margin_bottom = 5
						modify_texture = {
							blend_mode = alphamultiply
							texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
						}
						modify_texture = {
							blend_mode = alphamultiply
							texture = "gfx/interface/base_parts/gradient_black_invert.dds"
						}
					}
					margin_widget = {
						size = { 150 195 }
						margin_top = 20
						textbox = {
							align = bottom
							size = { 100% 100% }
							using = HeaderFont
							using = Black_FontColor
							text = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler.GetNameWithNoTooltip]"
							alwaystransparent = yes
							multiline = yes
							elide = right
						}
					}
					widget = {
						size = { 135 195 }
						datacontext = "[LobbyView.GetSelectedPlayable.GetCountry.GetRuler]"
						portrait_button = {
							name = "monarchpic"
							size = { 154 232 }
							position = { 3 -18 }
							#parentanchor = bottom|left
							using = pt_button_large
							pop_out = yes
							#visible="[GovernmentView.GetPlayer.MakeScope.Var('monarch_character').IsSet]"
							
							portrait_texture = "[Character.GetPortrait('default', 'looking_left')]"
						}
						icon_card = {
							visible = "[GovernmentView.GetPlayer.GetGovernment.IsRepublic]"
							size = { 40 40 }
							position = { 110 1 }
							parentanchor = bottom
							blockoverride "Icon"
							{
								texture = "[GetPartyIcon( Character.GetParty )]"
							}
							block "PartyIconVisibility" 
							{
								visible = "[Character.ShowParty]"
							}
							tooltip = "[Character.GetPartyTooltip]"
						}
					}
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'GBR')]"
					blockoverride "cards" {
						card_easy = { }
						card_the_concert_of_europe = { }
					}
					blockoverride "description" { text = "GBR_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'PRU')]"
					blockoverride "cards" {
						card_easy = { }
						card_the_concert_of_europe = { }
					}
					blockoverride "description" { text = "PRU_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'RUS')]"
					blockoverride "cards" {
						card_easy = { }
						card_the_concert_of_europe = { }
					}
					blockoverride "description" { text = "RUS_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'FRA')]"
					blockoverride "cards" {
						card_easy = { }
						card_the_concert_of_europe = { }
					}
					blockoverride "description" { text = "FRA_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'NED')]"
					blockoverride "cards" {
						card_easy = { }
						card_the_concert_of_europe = { }
					}
					blockoverride "description" { text = "NED_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'AUS')]"
					blockoverride "cards" {
						card_easy = { }
						card_the_concert_of_europe = { }
					}
					blockoverride "description" { text = "AUS_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TUR')]"
					blockoverride "cards" {
						card_easy = { }
						card_islamic_empires = { }
						card_the_concert_of_europe = { }
					}
					blockoverride "description" { text = "TUR_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SAR')]"
					blockoverride "cards" {
						card_easy = { }
						card_the_concert_of_europe = { }
					}
					blockoverride "description" { text = "SAR_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'SPA')]"
					blockoverride "cards" {
						card_easy = { }
						card_the_concert_of_europe = { }
					}
					blockoverride "description" { text = "SPA_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'USA')]"
					blockoverride "cards" {
						card_easy = { }
						card_revolutionary_states = { }
					}
					blockoverride "description" { text = "USA_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'VNZ')]"
					blockoverride "cards" {
						card_easy = { }
						card_revolutionary_states = { }
					}
					blockoverride "description" { text = "VNZ_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'MEX')]"
					blockoverride "cards" {
						card_easy = { }
						card_independence_movements = { }
					}
					blockoverride "description" { text = "MEX_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EGY')]"
					blockoverride "cards" {
						card_easy = { }
						card_islamic_empires = { }
					}
					blockoverride "description" { text = "EGY_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'EIC')]"
					blockoverride "cards" {
						card_easy = { }
					}
					blockoverride "description" { text = "EIC_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'KHL')]"
					blockoverride "cards" {
						card_easy = { }
					}
					blockoverride "description" { text = "KHL_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'CHI')]"
					blockoverride "cards" {
						card_easy = { }
						card_sphere_of_сhina = { }
					}
					blockoverride "description" { text = "CHI_DESK" }
				}
				mp_select_right_panel = {
					visible = "[EqualTo_string(LobbyView.GetSelectedPlayable.GetCountry.GetTag, 'TKG')]"
					blockoverride "cards" {
						card_easy = { }
					}
					blockoverride "description" { text = "TKG_DESK" }
				}
			}
		}
		flowcontainer = {
			direction = vertical
			spacing = 10
			parentanchor = bottom|left
			margin_left = -38
			margin_bottom = 50
			widget = {
				size = { 180 6 }
				parentanchor = hcenter
				using = brown_underline
			}
			margin_widget = {
				size = { 376 48 }
				parentanchor = hcenter
				enabled = "[LobbyView.CanGoBack]"
				tooltip = "[LobbyView.GetGoBackToolTip]"
				frontend_button = {
					size = { 100% 100% }
					blockoverride "Text" { text = "BACK" }
					blockoverride "On_click" { 
						onclick = "[SetPreparationLobby('(bool)no')]"
						onclick = "[LobbyView.GoBack]"
						shortcut = "close_window"
					}
				}
			}
		}
		flowcontainer = {
			direction = vertical
			spacing = 10
			parentanchor = bottom|right
			margin_right = -38
			margin_bottom = 50
			widget = {
				size = { 180 6 }
				parentanchor = hcenter
				using = brown_underline
			}
			margin_widget = {
				size = { 376 48 }
				parentanchor = hcenter
				enabled = "[LobbyView.CanGoBack]"
				tooltip = "[LobbyView.GetGoBackToolTip]"
				frontend_button = {
					size = { 100% 100% }
					using = tooltip_ne
					enabled = "[LobbyView.CanStart]"
					tooltip = "[LobbyView.StartToolTip]"
					visible = "[And(PlayerIsHost, And(GameIsMultiplayer,IsPreparationLobby))]"
					blockoverride "Text" { text = "JOMINI_MULTIPLAYER_GUI_START" }
					blockoverride "On_click" { 
						#onclick = "[LobbyView.Start]" 
						onclick = "[GetVariableSystem.Set('mp_start_screen', 'start')]"
						clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
					}
				}
				frontend_button = {
					size = { 100% 100% }
					using = tooltip_ne
					enabled = "[LobbyView.CanControlSelected]"
					tooltip = "[LobbyView.GetControlToolTip]"
					visible = "[And(PlayerIsHost,And(Or(Not(GameIsMultiplayer),Not(IsPreparationLobby)),Or(LobbyView.HasSelectedPlayable,LobbyView.IsObserver)))]"	
					blockoverride "Text" { text = "JOMINI_MULTIPLAYER_GUI_START" }
					blockoverride "On_click" { 
						#onclick = "[GameLobby.StartGame]"
						#onclick = "[LobbyView.Ready]"
						onclick = "[GetVariableSystem.Set('mp_start_screen', 'start')]"
						clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_game_start"
					}
				}
			}
		}
	}



	@initial_animation = 0.5
	@numbers_animation = 0.4
	type mp_start_screen = widget {
		size = { 100% 100% }
		filter_mouse = left|wheel|right
		alwaystransparent = no
		visible = "[GetVariableSystem.HasValue('mp_start_screen', 'start')]"
		alpha = 0
		state = { 
			name = _show
			trigger_when = "[GetVariableSystem.HasValue('mp_start_screen', 'start')]"
			on_start = "[PdxGuiTriggerAllAnimations('initial_animation')]"
		}
		state = {
			name = _hide
			on_start = "[PdxGuiTriggerAllAnimations('hide_animation')]"
			duration = 0.5
		}
		state = {
			name = "initial_animation"
			duration = 0.5
			alpha = 1
			next = start_game
		}
		state = {
			name = "hide_animation"
			duration = 0.5
			alpha = 0
		}
		state = {
			name = "start_game"
			delay = 2.0
			on_start = "[LobbyView.Start]" 
			on_start = "[GameLobby.StartGame]"
			on_start = "[LobbyView.Ready]"
		}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			texture = "[GetCurrentLoadingScreen]"
		}
		progressbar = {
			size = { 44 44 }
			gfxtype = framedprogressbargfx
			texture = "gfx/interface/loading_progress.dds"
			framesize = { 44 45 }
			loopinterval = 1.0
			max = 0
			position = { 10 10 }
		}
		textbox = {
			position = { 60 0 }
			text = "Preparing the game..."
			size = { 200 60 }
			using = BaseFontS
			using = Black_FontColor
			fontsize = 16
			align = left
		}
		icon = {
			size = { 500 280 }
			parentanchor = center
			using = black_background
			modify_texture = {
				texture = "gfx/interface/base_parts/horizontal_gradient_black.dds"
				blend_mode = alphamultiply
			}
			state = {
				name = "initial_animation"
				duration = @initial_animation
				size = { 1500 280 }
				bezier = { 0.1 0.25 0.4 1 }
			}
			state = {
				name = "hide_animation"
				duration = @initial_animation
				size = { 500 280 }
			}
		}
		vbox = {
			widget = {
				layoutpolicy_vertical = expanding
			}
			widget = {
				layoutpolicy_vertical = fixed
				size = { 564 75 }
				icon = {
					size = { 100% 100% }
					alpha = 0
					position = { 0 15 }
					texture = "gfx/interface/base_parts/base_color.dds"
					color = { 0.95 0.8 0.44 1 }
					modify_texture = {
						texture = "gfx/interface/images/elements/top_image.dds"
						blend_mode = alphamultiply
					}
					state = {
						name = "initial_animation"
						duration = @initial_animation
						position = { 0 -15 }
						alpha = 1
						bezier = { 0.1 0.25 0.4 1 }
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						position = { 0 15 }
						alpha = 0
					}
				}
			}
			hbox = {
				layoutpolicy_vertical = fixed
				spacing = 15
				widget = {
					layoutpolicy_horizontal = expanding
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 75 75 }
					icon = {
						size = { 60 60 }
						alpha = 0
						parentanchor = right
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/left_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "initial_animation"
							duration = @initial_animation
							size = { 90 90 }
							alpha = 1
							bezier = { 0.1 0.25 0.4 1 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							size = { 60 60 }
							alpha = 0
						}
					}
				}
				textbox = {
					layoutpolicy_horizontal = fixed
					fontsize = 70
					align = hcenter
					font = HeaderFont
					using = Highlight_FontColor
					text = "[LobbyView.GetSelectedPlayable.GetCountry.GetNameWithNoTooltip]"
					autoresize = yes
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 75 75 }
					icon = {
						size = { 60 60 }
						alpha = 0
						parentanchor = left
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/right_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "initial_animation"
							duration = @initial_animation
							size = { 90 90 }
							alpha = 1
							bezier = { 0.1 0.25 0.4 1 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							size = { 60 60 }
							alpha = 0
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = expanding
				}
			}
			hbox = {
				layoutpolicy_vertical = fixed
				widget = {
					layoutpolicy_horizontal = expanding
					size = { 270 75 }
					icon = {
						size = { 100% 100% }
						position = { -405 0 }
						alpha = 0
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/left_bottom_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "initial_animation"
							duration = @initial_animation
							position = { -10 0 }
							alpha = 1
							bezier = { 0.1 0.25 0.4 1 }
							next = finish_date
						}
						state = {
							name = "finish_date"
							delay = 1.2
							duration = @numbers_animation
							position = { -20 0 }
							bezier = { 0.1 0.25 0.4 1 }
							next = real_finish_date
						}
						state = {
							name = "real_finish_date"
							duration = 0.1
							position = { -10 0 }
							bezier = { 0.1 0.25 0.4 1 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { -405 0 }
							alpha = 0
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 150 75 }
					alpha = 0
					state = {
						name = "initial_animation"
						duration = @initial_animation
						alpha = 1
						bezier = { 1 1 0 1 }
						on_start = "[PdxGuiTriggerAllAnimations('0000')]"
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						alpha = 0
					}
					widget = {
						size = { 100% 100% }
						position = { 0 400 }
						state = {
							name = "initial_animation"
							duration = @initial_animation
							delay = 0.1
							alpha = 1
							position = { 0 0 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { 0 200 }
							alpha = 0
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "0000" }
							state = {
								name = "0000"
								alpha = 1
								delay = @initial_animation
								start_sound = {
									soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
								}
								next = show
							}
							state = {
								name = "show"
								delay = @numbers_animation
								on_start = "[PdxGuiTriggerAllAnimations('0001')]"
								next = hide_animation
							}
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "0001" }
							state = {
								name = "0001"
								alpha = 1
								start_sound = {
									soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
								}
								next = show
							}
							state = {
								name = "show"
								delay = @numbers_animation
								on_start = "[PdxGuiTriggerAllAnimations('0018')]"
								next = hide_animation
							}
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "0018" }
							state = {
								name = "0018"
								alpha = 1
								start_sound = {
									soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
								}
								next = show
							}
							state = {
								name = "show"
								delay = @numbers_animation
								on_start = "[PdxGuiTriggerAllAnimations('0181')]"
								next = hide_animation
							}
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "0181" }
							state = {
								name = "0181"
								alpha = 1
								start_sound = {
									soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_button_radio"
								}
								next = show
							}
							state = {
								name = "show"
								delay = @numbers_animation
								on_start = "[PdxGuiTriggerAllAnimations('1815')]"
								next = hide_animation
							}
						}
						text_area_date = {
							alpha = 0
							blockoverride "text" { text = "1815" }
							state = {
								name = "1815"
								alpha = 1
								start_sound = {
									soundeffect = "event:/SFX/UI/Notifications/sfx_ui_notification_alert"
								}
								next = show
							}
							state = {
								name = "show"
							}
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = expanding
					size = { 270 75 }
					icon = {
						size = { 100% 100% }
						position = { 405 0 }
						alpha = 0
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/right_bottom_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "initial_animation"
							duration = @initial_animation
							position = { 10 0 }
							alpha = 1
							bezier = { 0.1 0.25 0.4 1 }
							next = finish_date
						}
						state = {
							name = "finish_date"
							delay = 1.2
							duration = @numbers_animation
							position = { 20 0 }
							bezier = { 0.1 0.25 0.4 1 }
							next = real_finish_date
						}
						state = {
							name = "real_finish_date"
							duration = 0.1
							position = { 10 0 }
							bezier = { 0.1 0.25 0.4 1 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { 405 0 }
							alpha = 0
						}
					}
				}
			}
			widget = {
				layoutpolicy_vertical = expanding
			}
		}
	}

	type mp_start_screen_ingame = widget {
		size = { 100% 100% }
		filter_mouse = left|wheel|right
		alwaystransparent = no
		alpha = 1
		visible = "[GetVariableSystem.HasValue('mp_start_screen', 'start')]"
		state = { 
			name = start
			duration = 1.0
			trigger_when = "[GetVariableSystem.HasValue('mp_start_screen', 'start')]"
			on_finish = "[PdxGuiTriggerAllAnimations('start_hide_animation')]"
		}
		state = {
			name = "start_hide_animation"
			delay = 0.5
			duration = 1.0
			alpha = 0
			on_start = "[PdxGuiTriggerAllAnimations('hide_animation')]"
			on_finish = "[GetVariableSystem.Set('mp_start_screen', 'select')]"
		}
		state = {
			name = "hide_animation"
			alpha = 1
		}
		#state = {
		#	name = "show_all"
		#	on_start = "[PdxGuiTriggerAllAnimations('base_animation')]"
		#	on_start = "[GetVariableSystem.Set('mp_start_screen', 'select')]"
		#	alpha = 1
		#}
		background = {
			shaderfile = "gfx/FX/pdxgui_default.shader"
			texture = "[GetCurrentLoadingScreen]"
		}
		progressbar = {
			size = { 44 44 }
			gfxtype = framedprogressbargfx
			texture = "gfx/interface/loading_progress.dds"
			framesize = { 44 45 }
			loopinterval = 1.0
			max = 0
			position = { 10 10 }
		}
		textbox = {
			position = { 60 0 }
			text = "Preparing the game..."
			size = { 200 60 }
			using = BaseFontS
			using = Black_FontColor
			fontsize = 16
			align = left
		}
		icon = {
			size = { 1500 280 }
			parentanchor = center
			using = black_background
			modify_texture = {
				texture = "gfx/interface/base_parts/horizontal_gradient_black.dds"
				blend_mode = alphamultiply
			}
			state = {
				name = "base_animation"
				size = { 1500 280 }
			}
			state = {
				name = "hide_animation"
				duration = @initial_animation
				size = { 500 280 }
			}
		}
		vbox = {
			widget = {
				layoutpolicy_vertical = expanding
			}
			widget = {
				layoutpolicy_vertical = fixed
				size = { 564 75 }
				icon = {
					size = { 100% 100% }
					alpha = 1
					position = { 0 -15 }
					texture = "gfx/interface/base_parts/base_color.dds"
					color = { 0.95 0.8 0.44 1 }
					modify_texture = {
						texture = "gfx/interface/images/elements/top_image.dds"
						blend_mode = alphamultiply
					}
					state = {
						name = "base_animation"
						position = { 0 -15 }
						alpha = 1
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						position = { 0 15 }
						alpha = 0
					}
				}
			}
			hbox = {
				layoutpolicy_vertical = fixed
				spacing = 15
				widget = {
					layoutpolicy_horizontal = expanding
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 75 75 }
					icon = {
						size = { 90 90 }
						parentanchor = right
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/left_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "base_animation"
							size = { 90 90 }
							alpha = 1
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							size = { 60 60 }
							alpha = 0
						}
					}
				}
				textbox = {
					layoutpolicy_horizontal = fixed
					fontsize = 70
					align = hcenter
					font = HeaderFont
					using = Highlight_FontColor
					text = "[InGameTopbar.GetPlayer.GetNameWithNoTooltip]"
					autoresize = yes
					alpha = 0
					state = {
						name = "base_animation"
						alpha = 1
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						alpha = 0
					}
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 75 75 }
					icon = {
						size = { 90 90 }
						parentanchor = left
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/right_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "base_animation"
							size = { 90 90 }
							alpha = 1
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							size = { 60 60 }
							alpha = 0
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = expanding
				}
			}
			hbox = {
				layoutpolicy_vertical = fixed
				widget = {
					layoutpolicy_horizontal = expanding
					size = { 270 75 }
					icon = {
						size = { 100% 100% }
						position = { -10 0 }
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/left_bottom_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "base_animation"
							position = { -10 0 }
							alpha = 1
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { -405 0 }
							alpha = 0
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = fixed
					size = { 150 75 }
					alpha = 1
					state = {
						name = "base_animation"
						alpha = 1
					}
					state = {
						name = "hide_animation"
						duration = @initial_animation
						alpha = 0
					}
					widget = {
						size = { 100% 100% }
						state = {
							name = "base_animation"
							alpha = 1
							position = { 0 0 }
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { 0 200 }
							alpha = 0
						}
						textbox = {
							size = { 100% 100% }
							fontsize = 70
							align = hcenter
							font = HeaderFont
							using = Highlight_FontColor
							text = "1815"
							alpha = 1
							state = {
								name = "base_animation"
								alpha = 1
							}
							state = {
								name = "hide_animation"
								alpha = 0
							}
						}
					}
				}
				widget = {
					layoutpolicy_horizontal = expanding
					size = { 270 75 }
					icon = {
						size = { 100% 100% }
						position = { 10 0 }
						alpha = 1
						texture = "gfx/interface/base_parts/base_color.dds"
						color = { 0.95 0.8 0.44 1 }
						modify_texture = {
							texture = "gfx/interface/images/elements/right_bottom_image.dds"
							blend_mode = alphamultiply
						}
						state = {
							name = "base_animation"
							position = { 10 0 }
							alpha = 1
						}
						state = {
							name = "hide_animation"
							duration = @initial_animation
							position = { 405 0 }
							alpha = 0
						}
					}
				}
			}
			widget = {
				layoutpolicy_vertical = expanding
			}
		}
	}
}