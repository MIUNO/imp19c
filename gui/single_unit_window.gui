template unit_action_item
{
	widget = {
		size = { 44 44 }
		icon_button_square = {
			
			blockoverride "On_click"
			{
				onclick = "[UnitActionItem.Activate]"
				enabled = "[UnitActionItem.CanActivate]"
				shortcut = "[UnitActionItem.GetShortcut]" 
				tooltip = "[UnitActionItem.GetTooltip]"
			}
			
			
			blockoverride "Icon" { texture = "[UnitActionItem.GetTexture]" }
		}
	}
}

template unit_action_item_round
{
	button_round_inverted_toggle = {
		size = { 58 58 }
		
		blockoverride "On_click"
		{
			onclick = "[UnitActionItem.Activate]"
			shortcut = "[UnitActionItem.GetShortcut]"
			down = "[UnitActionItem.IsActive]"
			tooltip = "[UnitActionItem.GetTooltip]"
		}
		enabled = "[UnitActionItem.CanActivate]"
		
		blockoverride "HideAlphaIcon" {}
		blockoverride "StandardIcon" { 
			texture = "[UnitActionItem.GetTexture]" 
			visible = yes
		}
	}
}

template unit_action_item_diamond
{
	widget = {
		size = { 44 44 }
		icon_button_square = {
			enabled = "[UnitActionItem.CanActivate]"
			
			blockoverride "On_click"
			{
				onclick = "[UnitActionItem.Activate]"
				tooltip = "[UnitActionItem.GetTooltip]"
				shortcut = "[UnitActionItem.GetShortcut]"
			}
			
			blockoverride "Icon"
			{
				texture = "[UnitActionItem.GetTexture]"
			}
		}
	}
}



base_window = {
	name = "single_unit_window"
	size = { 492 760 }
	widgetanchor = top|left
	using = main_window_template
	position = { 68 144 }
	state = {
		name = _show
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	state = {
		name = _hide
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}

	secondary_header = {
		size = { 100% 32 }
		blockoverride "AdditionalIcons" { 
			flowcontainer = {
				ignoreinvisible = yes
				icon = {
					texture = "gfx/interface/unit_view/army_hidden_icon.dds"
					visible = "[Not(SingleUnitWindow.GetSelectedUnit.IsVisibleToAi)]"
					tooltip = [SingleUnitWindow.GetSelectedUnit.GetIsVisibleToAiTooltip]
					glow = {
						glow_radius = 3
						color = { 1 1 1 1 }
					}
				}
				
				icon = {
					texture = "gfx/interface/unit_view/army_visible_icon.dds"
					visible = [SingleUnitWindow.GetSelectedUnit.IsVisibleToAi]
					tooltip = [SingleUnitWindow.GetSelectedUnit.GetIsVisibleToAiTooltip]
					glow = {
						glow_radius = 3
						color = { 1 1 1 1 }
					}
				}
				
				icon = {
					framesize = { 50 50 }
					size = { 28 28 }
					texture = "gfx/interface/icons/unit_actions/unit_naming.dds"
					frame = "[SingleUnitWindow.GetUnitNameIconFrame]"
					visible = "[And(SingleUnitWindow.CanRenameUnit,SingleUnitWindow.HasCustomUnitName)]"
					tooltip = "[SingleUnitWindow.GetUnitNameIconTooltip]"
				}
			}

			widget = { size = { 4 0 } }
		}
		
		blockoverride "Title_text"
		{
			text = "[SingleUnitWindow.GetSelectedUnit.GetName]"
		}
		visible = "[Not(SingleUnitWindow.CanRenameUnit)]"
		tooltip = "UNIT_NAME_NON_EDIT_TT"
		blockoverride "White_buttons"
		{
			#button_close = {
			#	visible = "[SingleUnitWindow.GetSelectedUnit.IsLegion]"
			#	onclick = "[OpenLegionView( SingleUnitWindow.GetSelectedUnit.GetLegion )]"
			#}
			button_close = {
				onclick = "[SingleUnitWindow.OnClose]"
				tooltip = "CLOSE"
			}
		}
	}
	
	flowcontainer = {
		parentanchor = bottom|left
		position = { 4 -6 }
		ignoreinvisible = yes
		icon = {
			texture = "gfx/interface/icons/shared_icons/exiles.dds"
			size = { 32 32 }
			visible = "[SingleUnitWindow.GetSelectedUnit.IsExiled]"
			tooltip = "[SingleUnitWindow.GetExileTooltip]"
		}
		
		icon = {
			texture = "gfx/interface/icons/shared_icons/retreating.dds"
			size = { 32 32 }
			visible = "[SingleUnitWindow.GetSelectedUnit.IsRetreating]"
			tooltip = UNIT_RETREAT_TT
		}
	}
	
	secondary_header = {
		size = { 100% 32 }
		visible = "[SingleUnitWindow.CanRenameUnit]"
		blockoverride "AdditionalIcons"
		{
			flowcontainer = {
				ignoreinvisible = yes
				icon = {
					texture = "gfx/interface/unit_view/army_hidden_icon.dds"
					visible = "[Not(SingleUnitWindow.GetSelectedUnit.IsVisibleToAi)]"
					tooltip = [SingleUnitWindow.GetSelectedUnit.GetIsVisibleToAiTooltip]
				}
				
				icon = {
					texture = "gfx/interface/unit_view/army_visible_icon.dds"
					visible = [SingleUnitWindow.GetSelectedUnit.IsVisibleToAi]
					tooltip = [SingleUnitWindow.GetSelectedUnit.GetIsVisibleToAiTooltip]
				}
				
				icon = {
					framesize = { 50 50 }
					size = { 28 28 }
					texture = "gfx/interface/icons/unit_actions/unit_naming.dds"
					frame = "[SingleUnitWindow.GetUnitNameIconFrame]"
					visible = "[And(SingleUnitWindow.CanRenameUnit,SingleUnitWindow.HasCustomUnitName)]"
					tooltip = "[SingleUnitWindow.GetUnitNameIconTooltip]"
				}
			
			}
			widget = { size = { 4 0 } }
		}
		blockoverride "TextTitle"
		{
			editbox = {
				size = { 270 32 }
				name = "unit_name"
				using = SubHeaderFont
				using = Sub_Header_FontColor
				text = "[SingleUnitWindow.GetSelectedUnit.GetName]"
				onreturnpressed = "[SingleUnitWindow.RenameUnit]"
				focuspolicy = click
				alwaystransparent = no 
				maxcharacters = 38
				multiline = no	
				tooltip = "UNIT_NAME_TT"
				autoresize = yes
			}
		}
		blockoverride "White_buttons"
		{
			button = {
				size = { 30 30 }
				texture = "gfx/interface/icons/modifiers/legion.dds"
				visible = "[SingleUnitWindow.GetSelectedUnit.IsLegion]"
				onclick = "[OpenMilitaryView( SingleUnitWindow.GetSelectedUnit )]"
				clicksound = "event:/SFX/UI/Generic/2.0/sfx_ui_button_goto"
				oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
				tooltip = "SINGLE_UNIT_VIEW_GO_TO_LEGION"
				shortcut = "recruit_to"
			}
			icon = {
				size = { 32 32 }
				texture = "gfx/interface/icons/modifiers/levy.dds"
				visible = "[SingleUnitWindow.GetSelectedUnit.IsLevy]"
				#tooltip = "[SingleUnitWindow.GetUnitNameIconTooltip]"
			}
			widget = { size = { 4 0 } }

			button_close = {
				onclick = "[SingleUnitWindow.OnClose]"
				tooltip = "CLOSE"
			}
		}
	}
	
	flowcontainer = {
		margin = { 12 38 }
		flowcontainer = {
			direction = vertical
			spacing = 5
			flowcontainer = {
				flowcontainer = {
					spacing = 4
					ignoreinvisible = yes
					cpt_button = {
						datacontext = "[SingleUnitWindow.GetSelectedUnit.GetCommander]"
						tooltip = "[SingleUnitWindow.GetCommanderTooltip]"
						visible = "[Not( SingleUnitWindow.GetSelectedUnit.IsLevy )]"
						icon_button_square = {
							#position = { -368 110 }
							parentanchor = bottom|right
							enabled = "[SingleUnitWindow.CanReplaceLeader]"
							blockoverride "On_click"
							{
								onclick = "[SingleUnitWindow.OnCommanderClick]"
							}
							tooltip = "[SingleUnitWindow.GetReplaceLeaderInfo]"
							blockoverride "Icon" {
								texture = "gfx/interface/icons/shared_icons/change.dds"
								size = { 34 34 }
							}
							visible = "[Not( SingleUnitWindow.GetSelectedUnit.IsLevy )]"
						}
					}
					cpt_button = {
						datacontext = "[SingleUnitWindow.GetSelectedUnit.GetCommander]"
						tooltip = "[SingleUnitWindow.GetCommanderTooltip]"
						visible = "[And( SingleUnitWindow.GetSelectedUnit.IsLevy, SingleUnitWindow.GetSelectedUnit.GetCommander.IsValid )]"
					}
					cpt_button = {
						datacontext = "[SingleUnitWindow.GetSelectedUnit.GetCommander]"
						tooltip = "NO_GOVERNOR_TOOLTIP"
						visible = "[And( SingleUnitWindow.GetSelectedUnit.IsLevy, Not( SingleUnitWindow.GetSelectedUnit.GetCommander.IsValid ) )]"
					}
				}
				flowcontainer = {
					flowcontainer = {
						direction = vertical
						flowcontainer = {
							widget = {
								size = { 45 45 }
								dynamicgridbox = {
									name = "objective_buttons"
									parentanchor = left
									position = { 1 0 }
									flipdirection = yes
									datamodel_wrap = 3
									datamodel = "[SingleUnitWindow.GetObjectiveItems]"
									item = {
										using = unit_action_item
									}
								}
							}
							margin_widget = {
								size = { 146 15 }
								margin_right = 10
								parentanchor = bottom
								fixed_size_progressbar = {
									size = { 100% 9 }
									layoutpolicy_horizontal = expanding
									blockoverride "Value" { value = "[FixedPointToFloat(SingleUnitWindow.GetSelectedUnit.GetMoralePercent)]" }
									tooltip = "[SingleUnitWindow.GetSelectedUnit.GetMoraleTooltip]"
								}
								icon = {
									using = icon_morale
									size = { 40 40 }
									position = { 0 -31 }
								}
								textbox = {
									using = BaseFontM
									using = Black_FontColor
									parentanchor = right
									autoresize = yes
									position = { 0 -24 }
									text = "[SingleUnitWindow.GetSelectedUnit.GetMoralePercent|0]%"
								}
							}
							margin_widget = {
								size = { 90 15 }
								margin_right = 5
								parentanchor = bottom
								visible = "[Not(SingleUnitWindow.GetSelectedUnit.IsNavy)]"
								fixed_size_progressbar = {
									size = { 100% 9 }
									layoutpolicy_horizontal = expanding
									blockoverride "Value" { value = "[SingleUnitWindow.GetSelectedUnit.GetFoodPercentage]" }
									tooltip = "[SingleUnitWindow.GetSelectedUnit.GetFoodSupplyInformation]"
									visible = "[SingleUnitWindow.GetSelectedUnit.CanGetFoodFromLocation]"
								}
								fixed_size_progressbar = {
									size = { 100% 9 }
									layoutpolicy_horizontal = expanding
									blockoverride "Value" { value = "[SingleUnitWindow.GetSelectedUnit.GetFoodPercentage]" }
									tooltip = "[SingleUnitWindow.GetSelectedUnit.GetFoodSupplyInformation]"
									visible = "[Not( SingleUnitWindow.GetSelectedUnit.CanGetFoodFromLocation )]"
								}
								icon = {
									texture = "gfx/interface/icons/shared_icons/food_capacity.dds"
									size = { 34 34 }
									position = { 2 -26 }
								}
								textbox = {
									using = BaseFontM
									using = Black_FontColor
									parentanchor = right
									autoresize = yes
									position = { 0 -24 }
									text = "[SingleUnitWindow.GetSelectedUnit.GetFoodSupply|0]"
								}
							}
						}
						flowcontainer = {
							button_round_inverted_toggle = {
								size = { 72 72 }
								parentanchor = center
								tooltip = "COMBAT_TACTIC_BUTTON"
								blockoverride "On_click"
								{
									onclick = "[SingleUnitWindow.OnPickTactic]"
									enabled = "[SingleUnitWindow.CanPickTactic]"
								}
								blockoverride "HideAlphaIcon" { }
								blockoverride "StandardIcon" { 
									texture = "[GetCombatTacticIcon(SingleUnitWindow.GetSelectedUnit.GetTactic.GetIcon)]"
									visible = yes
								}
							}
							margin_widget = {
								size = { 132 35 }
								margin = { 8 8 }
								using = NoninteractableBG
								
								overlappingitembox = {
									datamodel = "[SingleUnitWindow.GetSelectedUnit.GetTemporaryModifiers]"
									position = { 0 -4 }
									size = { 100% 100% }
									spacing = 5
									
									item = {
										modifier_icon = {
											datacontext = "[TimedModifier.GetModifier]"
											tooltip = "[TimedModifier.GetTooltip]"
										}
									}
								}
							}
							container = {
								position = { 251 1 }
								using = NoninteractableBG
								blockoverride "Margins" { 
									margin = { 2 7 } 
									margin_right = 5
								}
								margin_widget = {
									size = { 36 36 }
									
									visible = "[SingleUnitWindow.GetSelectedUnit.HasLeader]"
									icon = {
										size = { 32 32 }
										position = { 2 2 }
										texture = "gfx/interface/icons/modifiers/loyalty_gain_chance.dds"
										tooltip = "[SingleUnitWindow.GetSelectedUnit.GetCommander.GetLoyaltyGainToolTip]"
									}
								}
								margin_widget = {
									visible = "[SingleUnitWindow.GetSelectedUnit.HasLeader]"
									position = { 36 0 }
									size = { 36 36 }
									
									icon = {
										texture = "gfx/interface/icons/modifiers/enslavement_efficiency.dds"
										size = { 32 32 }
										position = { 2 3 }
										tooltip = "[SingleUnitWindow.GetSelectedUnit.GetCommander.GetEnslavementEffiencyTooltip]"
									}
								}
							}
						}
					}
				}
			}
			flowcontainer = {
				direction = vertical
				widget = {
					size = { 385 28 }
					icon_button_square = {
						size = { 224 28 }
						parentanchor = hcenter
						blockoverride "On_click"
						{
							enabled = "[SingleUnitWindow.CanToggleFlankSize]"
							onclick = [SingleUnitWindow.ToggleFlankSize]
						}
						tooltip = "[SingleUnitWindow.GetFlankTooltip]"

						blockoverride "Icon"
						{
							textbox = {
								datacontext = "[SingleUnitWindow]"
								text = "DESIRED_FLANK_SIZE"
								parentanchor = center
								autoresize = yes
								using = BaseFontM
								using = Black_FontColor
								position = { 0 -2 }
							}
						}
					}
				}
				widget = {
					size = { 385 60 }
					margin_widget = {
						#visible = yes
						
						#position = { 0 30 }
						size = { 490 60 }
						scale = 0.82
						dynamicgridbox = {
							size = { 100% 100% }
							flipdirection = no
							position = { 3 6 }
							datamodel = "[SingleUnitWindow.GetPreferredUnitItems]"
							
							item = {
								widget = {
									size = { 490 30 }
									allow_outside = yes
									outliner_highlight_button = {
										size = { 234 21 }
										blockoverride "UpAlpha" { alpha = 0.15 }
										visible = "[Not( EqualTo_string( PreferredUnitItem.GetUiKey, 'FLANK_UNIT' ) )]"
										blockoverride "Text" { text = "" }
										position = { 106 0 }
										blockoverride "On_click"
										{
											onclick = "[PreferredUnitItem.OnClick]"
											enabled = "[PreferredUnitItem.CanClick]"
										}
										tooltip = "[PreferredUnitItem.GetTooltip]"
										blockoverride "ButtonTexture"
										{
											using = button_tiled_texture
											framesize = { 200 200 }
											spritetype = corneredtiled
											spriteborder = { 200 200 }
											
											modify_texture = {
												name = "area"
												texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
												blend_mode = alphamultiply
												SpriteType = corneredtiled
												spriteborder = { 12 0 }
											}
											
										}
										
										flowcontainer = {
											position = { 8 0 }
											@subunit_icon_size = 21
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											
										}
									}
									outliner_highlight_button = {
										blockoverride "UpAlpha" { alpha = 0.15 }
										blockoverride "MinimumSize" {}
										visible = "[EqualTo_string( PreferredUnitItem.GetUiKey, 'FLANK_UNIT' )]"
										position = { -2 -60 }
										size = { 112 52 }
										blockoverride "Text" { text = "" }
										blockoverride "On_click"
										{
											onclick = "[PreferredUnitItem.OnClick]"
											enabled = "[PreferredUnitItem.CanClick]"
										}
										tooltip = "[PreferredUnitItem.GetTooltip]"
										blockoverride "ButtonTexture"
										{
											using = button_tiled_texture
											framesize = { 200 200 }
											spritetype = corneredtiled
											spriteborder = { 200 200 }
											
											modify_texture = {
												name = "area"
												texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
												blend_mode = alphamultiply
												SpriteType = corneredtiled
												spriteborder = { 12 4 }
											}
											
										}
										
										flowcontainer = {
											position = { 4 0 }
											ignoreinvisible = yes
											alwaystransparent = yes
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)3' )]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)4' )]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)5' )]" }
											parentanchor = right
											widgetanchor = right
										}
									}
									flowcontainer = {
										visible = "[EqualTo_string( PreferredUnitItem.GetUiKey, 'FLANK_UNIT' )]"
										ignoreinvisible = yes
										alwaystransparent = yes
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)6' )]" }
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)7' )]" }
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)8' )]" }
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)9' )]" }
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)10' )]" }
										position = { 114 -47 }
										widgetanchor = right
									}
									outliner_highlight_button = {
										blockoverride "UpAlpha" { alpha = 0.15 }
										blockoverride "MinimumSize" {}
										visible = "[EqualTo_string( PreferredUnitItem.GetUiKey, 'FLANK_UNIT' )]"
										position = { 336 -60 }
										size = { 112 53 }
										blockoverride "On_click"
										{
											onclick = "[PreferredUnitItem.OnClick]"
											enabled = "[PreferredUnitItem.CanClick]"
										}
										tooltip = "[PreferredUnitItem.GetTooltip]"
										blockoverride "ButtonTexture"
										{
											using = button_tiled_texture
											framesize = { 200 200 }
											spritetype = corneredtiled
											spriteborder = { 200 200 }
											
											modify_texture = {
												name = "area"
												texture = "gfx/interface/base_parts/header_l_x20bd_alpha1.dds"
												blend_mode = alphamultiply
												SpriteType = corneredtiled
												spriteborder = { 12 4 }
											}
											
										}
										blockoverride "Text" { text = "" }
										flowcontainer = {
											alwaystransparent = yes
											visible = "[EqualTo_string( PreferredUnitItem.GetUiKey, 'FLANK_UNIT' )]"
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)3' )]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)4' )]" }
											icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)5' )]" }
											position = { 11 0 }
											widgetanchor = left
										}
									}
									flowcontainer = {
										alwaystransparent = yes
										visible = "[EqualTo_string( PreferredUnitItem.GetUiKey, 'FLANK_UNIT' )]"
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)6' )]" }
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)7' )]" }
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)8' )]" }
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)9' )]" }
										icon = { size = { @subunit_icon_size @subunit_icon_size } texture = "[GetSubUnitIcon(PreferredUnitItem.GetType.GetType)]" visible = "[GreaterThanOrEqualTo_int32( SingleUnitWindow.GetSelectedUnit.GetDesiredFlankSize, '(int32)10' )]" }
										position = { 347 -47 }
										widgetanchor = left
									}
								}
							}
						}
					}
				}
				widget = {
					size = { 385 100 }
					layoutpolicy_horizontal = expanding
					list_entry = { size = { 100% 92% } parentanchor = vcenter }
					overlappingitembox = {
						name = "unit_types_grid"
						size = { 100% 120 }
						spacing = 5
						datamodel = "[SingleUnitWindow.GetSubUnitCounts]"
						
						item = {
							unit_card = {
								blockoverride "Size" { size = { 70 102 } }
								tooltip = "[SubUnitCounts.GetTooltip]"
								alwaystransparent = no
								filter_mouse = all
							}
						}
						
					}
					
				}
				margin_widget = {
					margin_top = 10
					size = { 375 360 }
					scrollarea = {
						size = { 100% 100% }
						using = VerticalScrollAreaCutOff
						scrollbarpolicy_horizontal = always_off
						scrollbar_vertical = {
							using = VerticalScrollBar
						}
						
						scrollwidget = {
							dynamicgridbox = {
								name = "subunits_grid"
								size = { 100% 200 }
								
								datamodel = "[SingleUnitWindow.GetSelectedUnit.GetSubUnits]"
								
								item = {
									widget = {
										size = { 385 44 }
										list_entry = {
											size = { 100% 100% }
										}
										icon_card = {
											size = { 36 36 }
											parentanchor = vcenter
											blockoverride "Icon" { texture = "[GetSubUnitIcon(SubUnit.GetType)]" }
											tooltip = "[SubUnit.GetTypeDescription]"
										}
										
										textbox = {
											position = { 40 0 }
											parentanchor = vcenter
											autoresize = yes
											using = BaseFontS
											using = Black_FontColor
											text = "[SubUnit.GetName]"
											tooltip = "[SubUnit.GetDescription]"
											elide = right
											max_width = 158
											fontsize_min = 12
										}
										
										flowcontainer = {
											position = { 0 2 }
											parentanchor = right
											ignoreinvisible = yes
											spacing = 3

											button = {
												using = icon_loyalty
												visible = "[SubUnit.HasPersonalLoyalty]"
												tooltip = "[SubUnit.GetLoyaltyInformation]"
												onclick = "[DefaultOnCharacterClick( SubUnit.GetPersonalLoyalty.GetID )]"
												clicksound = "event:/SFX/UI/Generic/sfx_ui_generic_sub_tab"
												oversound = "event:/SFX/UI/Generic/sfx_ui_generic_mouse_over"
												size = { 26 26 }
												parentanchor = vcenter
											}

											icon_and_text_dark = {
												size = { 80 0 }
												blockoverride "Icon" { using = icon_morale }
												blockoverride "Text" { text = "[SubUnit.GetMoralePercent|0]%" }
												tooltip = "[SubUnit.GetMoraleInfo]"
											}
											
											icon_and_text_dark = {
												size = { 78 0 }
												blockoverride "Icon" 
												{ 
													using = icon_military_experience 
													size = { 29 29 }
												}
												blockoverride "Text" { text = "[SubUnit.GetExperience|0]%" }
												tooltip = "[SubUnit.GetExperienceInfo]"
											}
											
											icon_and_text_dark = {
												size = { 78 0 }
												tooltip = "[SubUnit.GetStrengthDescription]"
												blockoverride "Icon"
												{
													texture = "gfx/interface/icons/shared_icons/strength.dds"
													size = { 29 29 }
												}
												blockoverride "Text"
												{
													text = "[SubUnit.GetStrength]"
												}
											}
										}
									}
								}
							}
						}
					}
				}
			}
		}
		flowcontainer = {
			direction = vertical
			dynamicgridbox = {
				position = { 12 68 }
				name = "reorg_buttons"
				flipdirection = yes
				datamodel_wrap = 2
				datamodel = "[SingleUnitWindow.GetReorganisationItems]"
				item = {
					using = unit_action_item_diamond
				}
			}
			flowcontainer = {
				dynamicgridbox = {
					name = "toggle_buttons"
					datamodel_wrap = 1
					flipdirection = yes
					datamodel = "[SingleUnitWindow.GetToggleItems]"
					item = {
						using = unit_action_item
					}
				}
				dynamicgridbox = {
					name = "action_buttons"
					datamodel_wrap = 1
					flipdirection = yes
					datamodel = "[SingleUnitWindow.GetActionItems]"
					item = {
						using = unit_action_item
					}
				}
			}
		}
	}
}