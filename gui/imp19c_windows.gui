# OPEN WITH: gui.createwidget gui/imp19c_windows.gui example_window
# Just replace "example window" with the name of your widget

base_window = {
	name = "example_window" #name used in console command to open widget
    gfxtype = windowgfx
    parentanchor = center
    size = { 650 550 }
    vbox = {
        using = MainWindowHeaderBoxCentered

        blockoverride "Title_text" { text = "example_window" }

        vbox = {
            layoutpolicy_vertical = expanding
        }

    }
    button_close = {
        onclick = "[ExecuteConsoleCommand('GUI.ClearWidgets example_window')]"
        tooltip = "CLOSE"
        parentanchor = top|right
        position = { -7 10}
    }
}

types SupranationalWindows
{	
	type candidate = widget {
		size = { 250 60 }
	    country_flag = {
	        tooltip = "[Scope.GetCountry.GetName]"
	        datacontext = "[Province.MakeScope.GetVariable('host_tag').GetCountry]"
	        parentanchor = vcenter
	        position = { 2 2 }
	        block "flag"
			{
				texture = "[Province.MakeScope.GetVariable('host_tag').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
				frame = "[Province.MakeScope.GetVariable('host_tag').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
				framesize = { 56 56 }
			}
	        blockoverride "size"
	        {
	            size = { 42 42 }
	        }
	    }
		panelka = {
			size = { 120 32 }
			position = { 46 0 }
			block "TextBox" { text = "Candidate" }
		}
	    textbox = {
			size = { 120 20 }
			multiline = no
			position = { 50 28 }
			block "Candidate_name" { text = "Name" }
			fontsize = 16
			elide = right
			align = bottom
			using = BaseFontS
			using = Highlight_FontColor
			block "Candidate_name_tt" { tooltip = "Candidate name" }
		}
	    textbox = {
			size = { 40 50 }
			multiline = no
			position = { 200 0 }
			block "Num_votes" { text = "0" }
			fontsize = 20
			elide = right
			align = center
			using = BaseFontS
			using = Positive_FontColor
			tooltip = "num votes"
		}
	}

@mincategorybuttonwidth = 181
@maxcategorybuttonwidth = 181
@mincategorybuttonheight = 42
@maxcategorybuttonheight = 42
@window_width = 1130
@window_height = 700

	type supranational = base_window {
		name = "supranational" #name used in console command to open widget
		gfxtype = windowgfx
		parentanchor = center
		movable = no
		datacontext = "[Player.MakeScope.GetVariable('member_of_federation').GetProvince]"
		size = { @window_width @window_height }
		state = {
			name = _show
			start_sound = {
				soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
			}
			on_start = "[GetVariableSystem.Set('supranational_tabs', 'global')]"
		}
		flowcontainer = {
			direction = vertical
			widget = {
				size = { @window_width 12 }
				using = MainWindowHeaderLine
			}
			margin_widget = {
				size = { @window_width 58 }
				hbox = { 
					layoutpolicy_vertical = preferred
					layoutpolicy_horizontal = expanding
					spacing = -2
					margin_widget = {
						visible = "[GetVariableSystem.HasValue('supranational_tabs', 'global')]"
						using = MainWindowHeaderContentLeft
						blockoverride "Title_text" { text = "Global" }
						blockoverride "FlagOrIcon"
						{
							icon = {
								using = gold_background
								size = { 32 32 }
								modify_texture = {
									texture = "gfx/interface/icons/icon_alpha/star.dds"
									blend_mode = alphamultiply
								}
							}
						}
					}
					margin_widget = {
						visible = "[GetVariableSystem.HasValue('supranational_tabs', 'federation')]"
						using = MainWindowHeaderContentLeft
						blockoverride "Title_text" { text = "[Player.MakeScope.GetVariable('member_of_federation').GetProvince.MakeScope.GetVariable('federation_name').GetFlagName]" }
						blockoverride "FlagOrIcon"
						{
							icon = {
								using = gold_background
								size = { 32 32 }
								modify_texture = {
									texture = "gfx/interface/icons/icon_alpha/star.dds"
									blend_mode = alphamultiply
								}
							}
						}
					}
					flowcontainer = {
						spacing = 2
						category_tab = {
							blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
							blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
							blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('supranational_tabs', 'global'))]" }
							blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('supranational_tabs', 'global')]" }
							######## Shared Overrides
							blockoverride "Center_text" { text = "Global" }
							######## Small Button Overrides
							blockoverride "ClickFunction"
							{
								onclick = "[GetVariableSystem.Set('supranational_tabs', 'global')]"
							}
						}
						category_tab = {
							blockoverride "Enabled" { enabled = "[Player.MakeScope.Var('member_of_federation').IsSet]" }
							blockoverride "MinSize" { size = { @mincategorybuttonwidth @mincategorybuttonheight } }
							blockoverride "MaxSize" { size = { @maxcategorybuttonwidth @maxcategorybuttonheight } }
							blockoverride "MinVisible" { visible = "[Not( GetVariableSystem.HasValue('supranational_tabs', 'federation'))]" }
							blockoverride "MaxVisible" { visible = "[GetVariableSystem.HasValue('supranational_tabs', 'federation')]" }
							######## Shared Overrides
							blockoverride "Center_text" { text = "Federation" }
							######## Small Button Overrides
							blockoverride "ClickFunction"
							{
								onclick = "[GetVariableSystem.Set('supranational_tabs', 'federation')]"
							}
						}
					}
					margin_widget = {
						using = MainWindowHeaderContentRight
						blockoverride "White_buttons" 
						{
							button_close = {
								onclick = "[GetVariableSystem.Set( 'supranational_window', 'close' )]"
								tooltip = "CLOSE"
								shortcut = "close_window"
							}
						}
					}
				}
			}
			flowcontainer = {
				visible = "[GetVariableSystem.HasValue('supranational_tabs', 'global')]"

				scrollarea = {
					size = { 500 620 }
					scrollbarpolicy_horizontal = always_off
					using = VerticalScrollAreaCutOff
					scrollbar_vertical = {
						using = VerticalScrollBar
					}
					allow_outside = yes
					scrollwidget = {
						dynamicgridbox = {
							name = "international_view_plays_list"
							position = { 0 0 }
							parentanchor = hcenter	
							datamodel = "[GetGlobalList('global_all_diplomatic_plays')]"
							allow_outside = yes
							item = {
								allow_outside = yes
								margin_widget = {
									allow_outside = yes
									size = { 50 180 }
									icon = {
										size = { 493 140 }
										using = beige_background
										position = { -220 -2 }
										alpha = 1
										modify_texture = {
											name = "Alpha"
											blend_mode = alphamultiply
											texture = "gfx/interface/base_parts/gradient_black.dds"
										}
									}
									flowcontainer = {
										allow_outside = yes
										spacing = 2
										margin_bottom = 1
										margin_top = 1
										margin_left = -170
										direction = vertical
										flowcontainer = {
											allow_outside = yes
											direction = horizontal
											spacing = 5
											margin_bottom = 10
											margin_left = 10%
											margin_top = 10
										    country_flag = {
										        tooltip = "[Scope.GetProvince.MakeScope.GetVariable('play_instigator').GetCountry.GetName]"
										        datacontext = "[Scope]"
										        parentanchor = vcenter
										        position = { 0 0}
										        blockoverride "flag"
												{
													texture = "[Scope.GetProvince.MakeScope.GetVariable('play_instigator').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
													frame = "[Scope.GetProvince.MakeScope.GetVariable('play_instigator').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
													framesize = { 56 56 }
												}
										        blockoverride "size"
										        {
										            size = { 60 40 }
										        }
										    }
											textbox = {
												position = { 0 0 }
												margin_left = 30
												size = { 250 40 }
												max_width = 250
												using = BaseFontM
												using = Black_FontColor
												fontsize = 16
												multiline = yes

												text = "DIPLO_play_title"
												tooltip = "DIPLO_play_title"
											}
											country_flag = {
										        tooltip = "[Scope.GetProvince.MakeScope.GetVariable('play_target_country').GetCountry.GetName]"
										        datacontext = "[Scope]"
										        parentanchor = vcenter
										        position = { 0 0}
										        blockoverride "flag"
												{
													texture = "[Scope.GetProvince.MakeScope.GetVariable('play_target_country').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
													frame = "[Scope.GetProvince.MakeScope.GetVariable('play_target_country').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
													framesize = { 56 56 }
												}
										        blockoverride "size"
										        {
										            size = { 60 40 }
										        }
										    }

										}
										flowcontainer = {
											allow_outside = yes
											direction = vertical
											margin_left = 100%
											margin_top = -15%
											flowcontainer = {
												allow_outside = yes
												direction = horizontal
												spacing = 0
												margin_top = 0
												margin_bottom = 0
												textbox = {
													parentanchor = top
													position = { 0 0 }
													size = { 140 20 }
													max_width = 140
													using = BaseFontM
													using = Black_FontColor
													fontsize = 16

													text = "Balance of power: [Scope.GetProvince.MakeScope.GetVariable('AI_play_power_balance_instigator_root').GetValue|%0]"
													tooltip = "Balance of power between the instigator and the target country and both sides' allies."
												}
											}
											textbox = {
												parentanchor = top
												position = { 0 0 }
												size = { 140 20 }
												max_width = 140
												using = BaseFontM
												using = Black_FontColor
												fontsize = 16

												text = "#D Debug: [Scope.GetProvince.MakeScope.GetVariable('war_assessment').GetValue|+=0]"
												tooltip = "Nasty or nice"
											}
											flowcontainer = {
												allow_outside = yes
												direction = horizontal
												spacing = 0
												margin_top = 0
												margin_bottom = 0
												textbox = {
													parentanchor = top
													position = { 0 0 }
													size = { 200 20 }
													max_width = 200
													using = BaseFontM
													using = Black_FontColor
													fontsize = 16

													text = "Infamy cost for war: #R -[Scope.GetProvince.MakeScope.GetVariable('play_infamy_cost_war').GetValue|0]"
													tooltip = "The international opinion of how justified [Scope.GetProvince.MakeScope.GetVariable('play_instigator').GetCountry.GetName] would be going to war to resolve this play."
												}
											}
											flowcontainer = {
												allow_outside = yes
												direction = horizontal
												spacing = 0
												margin_top = 0
												margin_bottom = 0
												textbox = {
													parentanchor = top
													position = { 0 0 }
													size = { 200 20 }
													max_width = 200
													using = BaseFontM
													using = Black_FontColor
													fontsize = 16

													text = "Stability cost for war: #R -[Scope.GetProvince.MakeScope.GetVariable('play_stability_cost_war').GetValue|0]"
													tooltip = "Public support in [Scope.GetProvince.MakeScope.GetVariable('play_instigator').GetCountry.GetName] to go to war over this play"
												}
											}
										}
										
										# Play observers
										flowcontainer = {
											name = "play_observers"
											direction = horizontal
											size = { 100% 100% }
											position = { 0% 0%}
											allow_outside = yes
											textbox = {
												position = { -10% 100% }
												size = { 250 20 }
												max_width = 250
												using = BaseFontM
												using = Black_FontColor
												fontsize = 16

												text = "#Y Undecided"
												tooltip = ""
											}
											overlappingitembox = {
												name = "play_observers_undecided"
												position = { -20% 120% }
												datamodel = "[Scope.GetProvince.MakeScope.GetList('play_observers_undecided')]"
												size = { 120 30 }
												spacing = 20
												layoutpolicy_horizontal = expanding
												item = {
													allow_outside = yes
													flowcontainer = {
														allow_outside = yes
														spacing = 0
														margin_bottom = 0
														margin_top = 0
														margin_left = 0
														direction = vertical
														country_flag = {
													        tooltip = "[Scope.GetCountry.GetName]"
													        datacontext = "[Scope]"
													        parentanchor = vcenter
													        position = { 0 0}
													        blockoverride "flag"
															{
																texture = "[Scope.GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
																frame = "[Scope.GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
																framesize = { 56 56 }
															}
													        blockoverride "size"
													        {
													            size = { 30 20 }
													        }
													    }
													}
												}
											}
											

											textbox = {
												position = { -85% 100% }
												size = { 250 20 }
												max_width = 250
												using = BaseFontM
												using = Black_FontColor
												fontsize = 16

												text = "#Y Supporters"
												tooltip = ""
											}
											overlappingitembox = {
												name = "play_observers_support_instigator"
												position = { -100% 120% }
												datamodel = "[Scope.GetProvince.MakeScope.GetList('play_observers_support_instigator')]"
												size = { 120 30 }
												spacing = 20
												layoutpolicy_horizontal = expanding
												item = {
													allow_outside = yes
													flowcontainer = {
														allow_outside = yes
														spacing = 0
														margin_bottom = 0
														margin_top = 0
														margin_left = 0
														direction = vertical
														country_flag = {
													        tooltip = "[Scope.GetCountry.GetName]"
													        datacontext = "[Scope]"
													        parentanchor = vcenter
													        position = { 0 0}
													        blockoverride "flag"
															{
																texture = "[Scope.GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
																frame = "[Scope.GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
																framesize = { 56 56 }
															}
													        blockoverride "size"
													        {
													            size = { 30 20 }
													        }
													    }
													}
												}
											}

											textbox = {
												position = { 75% 100% }
												size = { 250 20 }
												max_width = 250
												using = BaseFontM
												using = Black_FontColor
												fontsize = 16

												text = "#Y Supporters"
												tooltip = ""
											}
											overlappingitembox = {
												name = "play_observers_support_target"
												position = { 65% 120% }
												datamodel = "[Scope.GetProvince.MakeScope.GetList('play_observers_support_target')]"
												size = { 120 30 }
												spacing = 20
												layoutpolicy_horizontal = expanding
												item = {
													allow_outside = yes
													flowcontainer = {
														allow_outside = yes
														spacing = 0
														margin_bottom = 0
														margin_top = 0
														margin_left = 0
														direction = vertical
														country_flag = {
													        tooltip = "[Scope.GetCountry.GetName]"
													        datacontext = "[Scope]"
													        parentanchor = vcenter
													        position = { 0 0}
													        blockoverride "flag"
															{
																texture = "[Scope.GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
																frame = "[Scope.GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
																framesize = { 56 56 }
															}
													        blockoverride "size"
													        {
													            size = { 30 20 }
													        }
													    }
													}
												}
											}
										}
										

									}

									
									
								}
							}
						}
					}
				}
			}
			flowcontainer = {
				visible = "[GetVariableSystem.HasValue('supranational_tabs', 'federation')]"
				spacing = 10
				margin = { 10 10 }
				flowcontainer = {
					name = "federation_leader"
					direction = vertical
					widget = { size = { 250 0 } }
					widget = {
						size = { 250 32 }
						sub_header_v = {
							size = { 100% 0 }
							blockoverride "Title_text" 
							{ 
								text = "President" # Should be "host" if ceremonial, "leader" if holding authority - add conditions
							}
						}
					}
					widget = {
						name = "federation_leader_flag"
						size = { 100% 140 }

						banner_great_power = {
							parentanchor = center
							datacontext = "[Province.MakeScope.GetVariable('host_tag').GetCountry]"
						}
					}
					widget = {
						name = "federation_leader_name"
						size = { 100% 56 }
						icon_and_text = {
							size = { 100 20 }
							tooltip = "[Province.MakeScope.GetVariable('host_tag').GetCountry.GetName]"
							parentanchor = hcenter
							blockoverride "LineSize"
							{
								size = { 100 4 }
							} 
							blockoverride "Icon"
							{
								visible = no
							}
							blockoverride "Text"
							{
								position = { 0 0 }
								text = "[Province.MakeScope.GetVariable('host_tag').GetCountry.GetNameWithNoTooltip]"
								align = center|center
								multiline = no
								fontsize = 20
							}
						}
						textbox = {
							size = { 220 20 }
							parentanchor = bottom|hcenter
							multiline = no
							text = "[Province.MakeScope.GetVariable('host_tag').GetCountry.GetRuler.GetName]"
							fontsize = 18
							elide = right
							using = BaseFontS
							using = Black_FontColor
						}
					}
					margin_widget = {
						size = { 250 42 }
						margin_top = 10
						sub_header_v = {
							size = { 100% 0 }
							blockoverride "Title_text" 
							{ 
								text = "Provinces"
							}
						}
					}
					widget = {
						size = { 250 100 }
						piechart = {
							size = { 90 90 }
							position = { 0 0 }
							parentanchor = vcenter
							datamodel = "[Province.MakeScope.GetList('list_of_members')]"
							icon = {
								size = { 100% 100% }
								texture = "gfx/interface/pie_charts/pie_chart_alpha_80_shadow.dds"
								alpha = 0.85
							}
							item = {
								pieslice = {
									texture = "gfx/interface/pie_charts/pie_chart_alpha_80.dds"
									tooltip = "[Scope.GetCountry.GetName]"
									value = "[IntToFloat( Scope.GetCountry.GetOwnedProvinceCount )]"
									color = "[Scope.GetCountry.GetMapColor]"
									alpha = 0.9
								}
							}
						}
						widget = {
							size = { 150 100 }
							parentanchor = right
							scrollarea = {
								size = { 100% 100 }
								position = { 0 4 }
								
								scrollbarpolicy_horizontal = always_off
								scrollbarpolicy_vertical = always_on
								
								scrollbar_vertical = {
									using = VerticalScrollBar
								}
								
								scrollwidget = {
								    vbox = {
								        datamodel = "[Province.MakeScope.GetList('list_of_members')]"
										item = {
											widget = {
												size = { 160 20 }
											    textbox = {
													size = { 110 20 }
													multiline = no
													text = "[Scope.GetCountry.GetNameWithNoTooltip]"
													tooltip = "[Scope.GetCountry.GetName]"
													fontsize = 16
													elide = right
													align = left
													using = BaseFontS
													using = Black_FontColor
												}
											    textbox = {
													size = { 100 20 }
													multiline = no
													position = { 32 0 }
													text = "[IntToFloat( Scope.GetCountry.GetOwnedProvinceCount )]"
													fontsize = 18
													elide = right
													align = right
													using = BaseFontS
													using = Highlight_FontColor
												}
											}
										}
								    }
								}
							}
						}			
					}
					margin_widget = {
						size = { 250 42 }
						margin_top = 10
						sub_header_v = {
							size = { 100% 0 }
							blockoverride "Title_text" 
							{ 
								text = "Next leader candidates"
							}
						}
					}
					flowcontainer = {
						direction = vertical
						widget = {
							size = { 250 26 }
						    textbox = {
								size = { 125 20 }
								multiline = no
								text = "Candidate"
								fontsize = 18
								align = center
								parentanchor = left
								using = BaseFontS
								using = Black_FontColor
							}
						    textbox = {
								size = { 125 20 }
								margin_right = 10
								multiline = no
								text = "Votes"
								fontsize = 18
								align = right
								parentanchor = right
								using = BaseFontS
								using = Black_FontColor
							}
						}
						icon = {
							size = { 0 6 }
							icon = {
								position = { -8 0 }
								using = brighten_red_background
								size = { 258 2 }
							}
							icon = {
								position = { 190 0 }
								using = brighten_red_background
								size = { 2 203 }
							}
						}
						candidate = {
					        blockoverride "flag"
							{
								texture = "[Province.MakeScope.GetVariable('host_tag').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
								frame = "[Province.MakeScope.GetVariable('host_tag').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
								framesize = { 56 56 }
							}
							blockoverride "Candidate_name" { text = "Candidate name 1" }
							blockoverride "TextBox" { text = "Candidate 1" }
							blockoverride "Num_votes" { text = "1" }
							blockoverride "Candidate_name_tt" { tooltip = "Candidate name 1" }
						}
						candidate = {
					        blockoverride "flag"
							{
								texture = "[Province.MakeScope.GetVariable('host_tag').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
								frame = "[Province.MakeScope.GetVariable('host_tag').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
								framesize = { 56 56 }
							}
							blockoverride "Candidate_name" { text = "Candidate name 2" }
							blockoverride "TextBox" { text = "Candidate 2" }
							blockoverride "Num_votes" { text = "7" }
							blockoverride "Candidate_name_tt" { tooltip = "Candidate name 2" }
						}
						candidate = {
					        blockoverride "flag"
							{
								texture = "[Province.MakeScope.GetVariable('host_tag').GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
								frame = "[Province.MakeScope.GetVariable('host_tag').GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
								framesize = { 56 56 }
							}
							blockoverride "Candidate_name" { text = "Candidate name 3" }
							blockoverride "TextBox" { text = "Candidate 3" }
							blockoverride "Num_votes" { text = "8" }
							blockoverride "Candidate_name_tt" { tooltip = "Candidate name 3" }
						}
					}
				}
				flowcontainer = {
					name = "membership_laws"
					direction = vertical
					widget = { size = { 600 0 } }
					widget = {
						size = { 250 32 }
						sub_header_v = {
							size = { 100% 0 }
							blockoverride "Title_text" 
							{ 
								text = "Cultural Membership"
							}
						}
					}
					button_radial = {
						position = { 5 33 }
						#enabled = "[]"
						scale = 0.9
						
						blockoverride "On_click" 
						{
							#onclick = "[]"
							inherit_visual_state = no
							enabled = yes
						}
						blockoverride "ShowDot"
						{
							#trigger_when = "[]"
						} 
						
						blockoverride "HideDot" 
						{
							#trigger_when = "[]"
						}
						#tooltip = "[]"
						#tooltipwidget = federation_law_tooltip
						widget = {
							position = { 30 0 }
							size = { 150 24 }
							using = NoninteractableBG
							blockoverride "Margins" { margin = { 4 6 } }
							textbox = {
								position = { 8 3 }
								autoresize = yes
								align = nobaseline|left
								using = BaseFontS
								using = Black_FontColor
								text = "Any culture"
								max_width = 280
								elide = right
							}
						}
					}
					button_radial = {
						position = { 5 66 }
						#enabled = "[]"
						scale = 0.9
						
						blockoverride "On_click" 
						{
							#onclick = "[]"
							inherit_visual_state = no
							enabled = yes
						}
						blockoverride "ShowDot"
						{
							#trigger_when = "[]"
						} 
						
						blockoverride "HideDot" 
						{
							#trigger_when = "[]"
						}
						#tooltip = "[]"
						#tooltipwidget = federation_law_tooltip
						widget = {
							position = { 30 0 }
							size = { 150 24 }
							using = NoninteractableBG
							blockoverride "Margins" { margin = { 4 6 } }
							textbox = {
								position = { 8 3 }
								autoresize = yes
								align = nobaseline|left
								using = BaseFontS
								using = Black_FontColor
								text = "Same culture group"
								max_width = 280
								elide = right
							}
						}
					}
					button_radial = {
						position = { 5 99 }
						#enabled = "[]"
						scale = 0.9
						
						blockoverride "On_click" 
						{
							#onclick = "[]"
							inherit_visual_state = no
							enabled = yes
						}
						blockoverride "ShowDot"
						{
							#trigger_when = "[]"
						} 
						
						blockoverride "HideDot" 
						{
							#trigger_when = "[]"
						}
						#tooltip = "[]"
						#tooltipwidget = federation_law_tooltip
						widget = {
							position = { 30 0 }
							size = { 150 24 }
							using = NoninteractableBG
							blockoverride "Margins" { margin = { 4 6 } }
							textbox = {
								position = { 8 3 }
								autoresize = yes
								align = nobaseline|left
								using = BaseFontS
								using = Black_FontColor
								text = "Same culture"
								max_width = 280
								elide = right
							}
						}
					}
				}
				flowcontainer = {
					name = "federation_members"
					direction = vertical
					widget = { size = { 240 0 } }
					widget = {
						size = { 240 620 }
						sub_header_v = {
							size = { 100% 620 }
							blockoverride "Title_text" 
							{ 
								text = "Federation members"
							}
							scrollarea = {
								#position = { -1 46 }
								size = { 100% 586 }
								position = { 0 34 }
								#parentanchor = top|hcenter
								
								scrollbarpolicy_horizontal = always_off
								scrollbarpolicy_vertical = always_on
								
								scrollbar_vertical = {
									using = VerticalScrollBar
								}
								
								scrollwidget = {
								    dynamicgridbox = {
								        datamodel = "[Province.MakeScope.GetList('list_of_members')]"
								        datamodel_wrap = 3
								        flipdirection = yes
										item = {
											margin_widget = {
												size = { 76 50 }
												margin = { 2 2 }
												margin_widget = {
													size = { 100% 100% }
													icon = {
														size = { 100% 100% }
														using = brighten_red_background
													}
													margin_widget = {
														margin = { 2 2 }
														size = { 100% 100% }
														margin_widget = {
															size = { 100% 100% }
															background = {
																shaderfile = "gfx/FX/pdxgui_default.shader"
																using = black_background
																using = portrait_x32y32bd_alpha
															}
														}
													    country_flag = {
													        tooltip = "[Scope.GetCountry.GetName]"
													        datacontext = "[Scope.GetCountry]"
													        parentanchor = vcenter
													        position = { 2 0}
													        blockoverride "flag"
															{
																texture = "[Scope.GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
																frame = "[Scope.GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
																framesize = { 56 56 }
															}
															blockoverride "click"
															{
																onclick = "[OpenDiplomacy(Scope.GetCountry)]"
															}
													        blockoverride "size"
													        {
													            size = { 38 38 }
													        }
													    }
													    textbox = {
															size = { 80 20 }
															multiline = no
															position = { 42 20 }
															text = "52"
															fontsize = 18
															elide = right
															using = BaseFontS
															#using = Black_FontColor
															using = Positive_FontColor
															tooltip = "num votes"
														}
													}
												}
											}
										}
								    }
								}
							}
						}
					}
				}
			}
		}
	}
}