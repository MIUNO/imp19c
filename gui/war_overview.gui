template WarParticipants
{
	item = {
		margin_widget = {
			size = { 535 50 }
			using = list_item
			flowcontainer = {
				margin = { 5 5 }
				spacing = 5
				parentanchor = vcenter
				new_country_flag = {
					datacontext = "[WarOverviewParticipant.GetCountry]"
					parentanchor = vcenter
					blockoverride "Size" { size = { 56 56 } }
					blockoverride "click"
					{
						onclick = "[OpenDiplomacy(WarOverviewParticipant.GetCountry)]"
					}
					tooltip = "COUNTRY_SHORTHAND_INFO"
					blockoverride "Flag" {
						texture = "[WarOverviewParticipant.GetCountry.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
						frame = "[WarOverviewParticipant.GetCountry.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
						framesize = { 56 56 }
					}
					blockoverride "FlagOverlord" {
						texture = "[WarOverviewParticipant.GetCountry.GetOverlord.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
						frame = "[WarOverviewParticipant.GetCountry.GetOverlord.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
						framesize = { 56 56 }
					}
				}
				widget = {
					size = { 165 35 }
					parentanchor = vcenter
					textbox = {
						max_width = 160
						elide = right
						fontsize_min = 12
						autoresize = yes
						using = BaseFontM
						using = Black_FontColor
						text = "[WarOverviewParticipant.GetCountry.GetName]"
					}
					textbox = {
						name = "war_enthusiasm"
						parentanchor = bottom
						max_width = 160
						elide = right
						fontsize_min = 12
						autoresize = yes
						using = BaseFontS
						using = Black_FontColor
						text = "[WarOverviewParticipant.GetWarEnthusiasm]"
						tooltip = "[WarOverviewParticipant.GetWarEnthusiasmTooltip]"
					}
				}
				widget = {
					size = { 70 30 }
					parentanchor = vcenter
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = beige_background
						alpha = 0.15
						margin = { 5 10 }
					}
					tag = {
						text = "[WarOverviewParticipant.GetCountry.GetManpower]"
						tooltip = "[WarOverviewParticipant.GetCountry.GetManpowerTooltip]"
						parentanchor = hcenter
					}
				}
				widget = {
					size = { 70 30 }
					parentanchor = vcenter
					tag = {
						text = "[WarOverviewParticipant.GetCountry.GetWarExhaustion|1]"
						tooltip = "[WarOverviewParticipant.GetCountry.GetWarExhaustionTooltip]"
						parentanchor = hcenter
					}
				}
				widget = {
					size = { 50 30 }
					parentanchor = vcenter
					background = {
						shaderfile = "gfx/FX/pdxgui_default.shader"
						using = beige_background
						alpha = 0.15
						margin = { 5 10 }
					}
					tag = {
						text = "[WarOverviewParticipant.GetCountry.GetStability|1]"
						tooltip = "[WarOverviewParticipant.GetCountry.GetStabilityTooltip]"
						parentanchor = hcenter
					}
				}
				widget = {
					size = { 100 30 }
					parentanchor = vcenter
					tag = {
						text = "[WarOverviewParticipant.GetCountry.GetBlockadedPercent|2%]"
						tooltip = "[WarOverviewParticipant.GetBlockadedPercentTooltip]"
						parentanchor = hcenter
					}
				}
			}
		}
	}
}

template WarBattles
{
	item = {
		margin_widget = {
			size = { 535 50 }
			using = list_item
			tooltip = "WAR_OVERVIEW_BATTLE_RESULT_TT"
			flowcontainer = {
				margin = { 5 5 }
				spacing = 5
				icon = {
					size = { 40 40 }
					texture = "[WarOverviewBattle.GetTypeTexture]"
				}
				textbox = {
					parentanchor = vcenter
					elide = right
					max_width = 120
					autoresize = yes
					fontsize_min = 12
					using = BaseFontM
					using = Black_FontColor
					text = "[WarOverviewBattle.GetBattleResult.GetName]"
				}
				flowcontainer = {
					parentanchor = vcenter
					margin_left = 10
					textbox = {
						autoresize = yes
						using = BaseFontS
						using = Black_FontColor
						text = "[WarOverviewBattle.GetWinLose]"
					}
					textbox = {
						autoresize = yes
						using = BaseFontM
						using = Black_FontColor
						text = "[WarOverviewBattle.GetScore]"
					}
				}
			}
			flowcontainer = {
				parentanchor = vcenter|right
				margin = { 10 5 }
				textbox = {
					autoresize = yes
					max_width = 80
					align = right
					elide = right
					using = BaseFontS
					text = "[WarOverviewBattle.GetResult]"
				}
			}
		}
	}
}

@window_width = 1160
@window_height = 910
@column_width = 550

#alwaystransparent = yes
widget = {
	name = "war_overview"
	size = { 100% 100% }
	alwaystransparent = yes
	layer = middle_top
	state = {
		name = _show
		on_start = "[GetVariableSystem.Set( 'show_alternative_peace_deals', 'no' )]"
	}
	state = { 
		name = _hide
		start_sound = {
			soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
		}
	}
	base_window = {
		size = { @window_width @window_height }
		parentanchor = center
		#parentanchor = bottom
		movable = no
		visible = "[GetVariableSystem.HasValue( 'show_alternative_peace_deals', 'no' )]"
		flowcontainer = {
			direction = vertical
			widget = {
				size = { @window_width 48 }
				using = MainWindowHeaderBoxCenteredNew
				blockoverride "Title_text" {
					text = "[WarOverview.GetWar.GetName]"
					datacontext = "[WarOverview]"
					tooltip = "WAR_DATE_DETAILS"
				}
				blockoverride "White_buttons" 
				{
					button_close = {
						onclick = "[WarOverview.OnClose]"
						onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
						shortcut = "close_window"
					}
				}
			}
			flowcontainer = {
				margin = { 10 10 }
				spacing = 10
				widget = {
					size = { 170 120 }
					datacontext = "[WarOverview.GetWar.GetAttackerWarLeader]"
					widget = {
						size = { 15 80 }
						position = { 5 5 }
						#parentanchor = hcenter
						using = color_background
						blockoverride "Color" {
							using = red_background
							color = "[Country.GetMapColor]"
						}
					}
					new_country_banner = {
						blockoverride "Size" { size = { 120 120 } }
						tooltip = "[Country.GetName]"
						parentanchor = center
						position = { 0 -15 }
					}
					widget = {
						size = { 15 80 }
						position = { -5 5 }
						parentanchor = right
						using = color_background
						blockoverride "Color" {
							using = red_background
							color = "[Country.GetMapColor]"
						}
					}
					icon_and_text = {
						size = { 160 20 }
						parentanchor = hcenter|bottom
						blockoverride "LineSize" { size = { 220 4 } } 
						blockoverride "Icon" { visible = no }
						blockoverride "Text"
						{
							position = { 0 0 }
							text = "war_attecker"
							align = center|center
							multiline = no
							using = BaseFontL
						}
					}
				}
				flowcontainer = {
					ignoreinvisible = yes
					margin_top = 10
					#POSITIVE WARSCORE BAR
					fixed_size_progressbar_war_score = {
						blockoverride "ProgressColor" { using = green_color }
						visible = "[GreaterThan_int32( WarOverview.GetWarScore, '(int32)0' )]"
						blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/warscore_cost.dds" }
						blockoverride "Value" { value = "[IntToFloat( WarOverview.GetWarScore )]" }
						blockoverride "Text" {
							position = { 0 -5 }
							text = "[WarOverview.GetWarScore]"
						}
					}
					#NEGATIVE WARSCORE BAR
					fixed_size_progressbar_war_score = {
						blockoverride "ProgressColor" { using = red_color }
						visible = "[LessThanOrEqualTo_int32( WarOverview.GetWarScore, '(int32)0' )]"
						blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/warscore_cost.dds" }
						blockoverride "Value" { value = "[IntToFloat( Abs_int32(WarOverview.GetWarScore) )]" }
						blockoverride "Text" {
							position = { 0 -5 }
							text = "[WarOverview.GetWar.MakeScope.GetVariable('warscore_balance').GetValue|0]"
						} # EGG
					}
				}
				widget = {
					size = { 170 120 }
					datacontext = "[WarOverview.GetWar.GetDefenderWarLeader]"
					widget = {
						size = { 15 80 }
						position = { 5 5 }
						#parentanchor = hcenter
						using = color_background
						blockoverride "Color" {
							using = red_background
							color = "[Country.GetMapColor]"
						}
					}
					new_country_banner = {
						blockoverride "Size" { size = { 120 120 } }
						tooltip = "[Country.GetName]"
						parentanchor = center
						position = { 0 -15 }
					}
					widget = {
						size = { 15 80 }
						position = { -5 5 }
						parentanchor = right
						using = color_background
						blockoverride "Color" {
							using = red_background
							color = "[Country.GetMapColor]"
						}
					}
					icon_and_text = {
						size = { 160 20 }
						parentanchor = hcenter|bottom
						blockoverride "LineSize" { size = { 220 4 } } 
						blockoverride "Icon" { visible = no }
						blockoverride "Text"
						{
							position = { 0 0 }
							text = "war_defender"
							align = center|center
							multiline = no
							using = BaseFontL
						}
					}
				}
			}
			flowcontainer = {
				margin = { 20 0 }
				spacing = 10
				sub_header_v = {
					size = { 555 680 }
					blockoverride "Title_text" { text = "war_allies" }
					flowcontainer = {
						margin_top = 40
						direction = vertical
						spacing = 5
						overlappingitembox = {
							name = "Friendly_units"
							size = { @column_width 104 }
							datamodel = "[WarOverview.GetFriendlySubUnitCounts]"
							spacing = 5
							item = {
								unit_card = {
									blockoverride "Size" { size = { 68 102 } }
									tooltip = "[SubUnitCounts.GetTooltip]"
									alwaystransparent = no
									filter_mouse = all
								}
							}
						}
						flowcontainer = {
							text_button_sort = {
								size = { 230 0 }
								tooltip = "OFFER_PEACE_SORT_BY_NAME_TOOLTIP"
								
								blockoverride "Button_text" { text = "A_Z" }
								blockoverride "Icon" { 
									visible = no
								}
								blockoverride "On_click" { onclick = "[WarOverview.SortFriendly('name')]" }
								blockoverride "DownState" { down = "[WarOverview.IsFriendlySorted('name')]" }
							}
							text_button_sort = {
								size = { 82 0 }
								blockoverride "Button_text" {  visible = no }
								blockoverride "Icon" { visible = no }
							}
							text_button_sort = {
								size = { 68 0 }
								tooltip = "OFFER_PEACE_SORT_BY_EXHAUSTION_TOOLTIP"
								blockoverride "Button_text" {  visible = no }
								blockoverride "Icon" { 
									texture = "gfx/interface/icons/modifiers/war_exhaustion.dds"
								}
								blockoverride "On_click" { onclick = "[WarOverview.SortFriendly('exhaustion')]" }
								blockoverride "DownState" { down = "[WarOverview.IsFriendlySorted('exhaustion')]" }
							}
							text_button_sort = {
								size = { 62 0 }
								tooltip = "OFFER_PEACE_SORT_BY_STABILITY_TOOLTIP"
								blockoverride "Button_text" {  visible = no }
								blockoverride "Icon" { 
									using = icon_stability
								}
								blockoverride "On_click" { onclick = "[WarOverview.SortFriendly('stability')]" }
								blockoverride "DownState" { down = "[WarOverview.IsFriendlySorted('stability')]" }
							}
							text_button_sort = {
								size = { 92 0 }
								tooltip = "OFFER_PEACE_SORT_BY_BLOCKADE_TOOLTIP"
								blockoverride "Button_text" {  visible = no }
								blockoverride "Icon" { 
									texture = "gfx/interface/icons/modifiers/blockade_efficiency.dds"
								}
								blockoverride "On_click" { onclick = "[WarOverview.SortFriendly('blockade')]" }
								blockoverride "DownState" { down = "[WarOverview.IsFriendlySorted('blockade')]" }
							}
						}
						scrollarea = {
							size = { @column_width 280 }
							scrollbarpolicy_horizontal = always_off
							using = VerticalScrollAreaCutOff
							scrollbar_vertical = {
								using = VerticalScrollBar
							}
							
							scrollwidget = {
								flowcontainer = {
									direction = vertical
									margin = { 0 5 }
									spacing = 5
									using = WarParticipants
									datamodel = "[WarOverview.GetFriendlyParticipants]"
								}
							}
						}
						margin_widget = {
							size = { 100% 50 }
							margin = { 5 5 }
							widget = {
								size = { 100% 100% }
								using = background_widget
								flowcontainer = {
									parentanchor = hcenter
									margin_top = 5
									spacing = 5
									icon_and_text = {
										size = { 180 32 }
										blockoverride "Icon" { texture = "gfx/interface/icons/font_icons/font_icon_light_infantry.dds" }
										blockoverride "Text" { text = "[WarOverview.GetFriendlyLandLosses]" }
										tooltip = "[WarOverview.GetFriendlyLandLossesTooltip]"
									}
									
									icon_and_text = {
										size = { 100 32 }
										blockoverride "Icon" { texture = "gfx/interface/icons/font_icons/font_icon_trireme.dds" }
										blockoverride "Text" { text = "[WarOverview.GetFriendlyNavalLosses]" }
										tooltip = "[WarOverview.GetFriendlyNavalLossesTooltip]"
									}
									
									icon_and_text = {
										size = { 100 32 }
										blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/attrition.dds" }
										blockoverride "Text" { text = "[WarOverview.GetFriendlyPopStats.GetKilled]" }
										tooltip = "POPS_KILLED"
									}
									
									icon_and_text = {
										size = { 100 32 }
										blockoverride "Icon" { using = icon_pop_slaves }
										blockoverride "Text" { text = "[WarOverview.GetFriendlyPopStats.GetEnslaved]" }
										tooltip = "POPS_ENSLAVED"
									}
								}
							}
						}
						scrollarea = {
							size = { @column_width 146 }
							scrollbarpolicy_horizontal = always_off
							using = VerticalScrollAreaCutOff
							scrollbar_vertical = {
								using = VerticalScrollBar
							}
							scrollwidget = {
								flowcontainer = {
									direction = vertical
									margin = { 0 5 }
									spacing = 5
									datamodel = "[WarOverview.GetBattlesWon]"
									using = WarBattles
								}
							}
						}
					}
				}
				sub_header_v = {
					size = { 555 680 }
					blockoverride "Title_text" { text = "war_enemys" }
					flowcontainer = {
						margin_top = 40
						direction = vertical
						spacing = 5
						overlappingitembox = {
							name = "Friendly_units"
							size = { @column_width 104 }
							datamodel = "[WarOverview.GetEnemySubUnitCounts]"
							spacing = 5
							item = {
								unit_card = {
									blockoverride "Size" { size = { 68 102 } }
									tooltip = "[SubUnitCounts.GetTooltip]"
									alwaystransparent = no
									filter_mouse = all
								}
							}
						}
						flowcontainer = {
							text_button_sort = {
								size = { 230 0 }
								tooltip = "OFFER_PEACE_SORT_BY_NAME_TOOLTIP"
								
								blockoverride "Button_text" { text = "A_Z" }
								blockoverride "Icon" { 
									visible = no
								}
								blockoverride "On_click" { onclick = "[WarOverview.SortEnemy('name')]" }
								blockoverride "DownState" { down = "[WarOverview.IsEnemySorted('name')]" }
							}
							text_button_sort = {
								size = { 82 0 }
								blockoverride "Button_text" {  visible = no }
								blockoverride "Icon" { visible = no }
							}
							text_button_sort = {
								size = { 68 0 }
								tooltip = "OFFER_PEACE_SORT_BY_EXHAUSTION_TOOLTIP"
								blockoverride "Button_text" {  visible = no }
								blockoverride "Icon" { 
									texture = "gfx/interface/icons/modifiers/war_exhaustion.dds"
								}
								blockoverride "On_click" { onclick = "[WarOverview.SortEnemy('exhaustion')]" }
								blockoverride "DownState" { down = "[WarOverview.IsEnemySorted('exhaustion')]" }
							}
							text_button_sort = {
								size = { 62 0 }
								tooltip = "OFFER_PEACE_SORT_BY_STABILITY_TOOLTIP"
								blockoverride "Button_text" {  visible = no }
								blockoverride "Icon" { 
									using = icon_stability
								}
								blockoverride "On_click" { onclick = "[WarOverview.SortEnemy('stability')]" }
								blockoverride "DownState" { down = "[WarOverview.IsEnemySorted('stability')]" }
							}
							text_button_sort = {
								size = { 92 0 }
								tooltip = "OFFER_PEACE_SORT_BY_BLOCKADE_TOOLTIP"
								blockoverride "Button_text" {  visible = no }
								blockoverride "Icon" { 
									texture = "gfx/interface/icons/modifiers/blockade_efficiency.dds"
								}
								blockoverride "On_click" { onclick = "[WarOverview.SortEnemy('blockade')]" }
								blockoverride "DownState" { down = "[WarOverview.IsEnemySorted('blockade')]" }
							}
						}
						scrollarea = {
							size = { @column_width 280 }
							scrollbarpolicy_horizontal = always_off
							using = VerticalScrollAreaCutOff
							scrollbar_vertical = {
								using = VerticalScrollBar
							}
							
							scrollwidget = {
								flowcontainer = {
									direction = vertical
									margin = { 0 5 }
									spacing = 5
									using = WarParticipants
									datamodel = "[WarOverview.GetEnemyParticipants]"
								}
							}
						}
						margin_widget = {
							size = { 100% 50 }
							margin = { 5 5 }
							widget = {
								size = { 100% 100% }
								using = background_widget
								flowcontainer = {
									parentanchor = hcenter
									margin_top = 5
									spacing = 5
									icon_and_text = {
										size = { 180 32 }
										blockoverride "Icon" { texture = "gfx/interface/icons/font_icons/font_icon_light_infantry.dds" }
										blockoverride "Text" { text = "[WarOverview.GetEnemyLandLosses]" }
										tooltip = "[WarOverview.GetEnemyLandLossesTooltip]"
									}
									
									icon_and_text = {
										size = { 100 32 }
										blockoverride "Icon" { texture = "gfx/interface/icons/font_icons/font_icon_trireme.dds" }
										blockoverride "Text" { text = "[WarOverview.GetEnemyNavalLosses]" }
										tooltip = "[WarOverview.GetEnemyNavalLossesTooltip]"
									}
									
									icon_and_text = {
										size = { 100 32 }
										blockoverride "Icon" { texture = "gfx/interface/icons/shared_icons/attrition.dds" }
										blockoverride "Text" { text = "[WarOverview.GetEnemyPopStats.GetKilled]" }
										tooltip = "POPS_KILLED"
									}
									
									icon_and_text = {
										size = { 100 32 }
										blockoverride "Icon" { using = icon_pop_slaves }
										blockoverride "Text" { text = "[WarOverview.GetEnemyPopStats.GetEnslaved]" }
										tooltip = "POPS_ENSLAVED"
									}
								}
							}
						}
						scrollarea = {
							size = { @column_width 146 }
							scrollbarpolicy_horizontal = always_off
							using = VerticalScrollAreaCutOff
							scrollbar_vertical = {
								using = VerticalScrollBar
							}
							scrollwidget = {
								flowcontainer = {
									direction = vertical
									margin = { 0 5 }
									spacing = 5
									datamodel = "[WarOverview.GetBattlesLost]"
									using = WarBattles
								}
							}
						}
					}
				}
			}
			text_button_square = {
				name = "alt_view"
				datacontext = "[GetScriptedGui('alt_peace_button')]"
				visible = "[Not(WarOverview.GetWar.IsCivilWar)]"
				blockoverride "Center_text" { text = "Sue for peace" }
				blockoverride "On_click" { 
					onclick = "[GetVariableSystem.Set( 'show_alternative_peace_deals', 'yes' )]" 
					onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( WarOverview.GetWar.MakeScope ).AddScope('player', Player.MakeScope).End )]"
				}
				tooltip = "#T Sue for peace#!"
				parentanchor = hcenter
				size = { 250 24 }
			}
		}
	}
	#Alt Peace window
	base_window = {
		size = { 818 712 }
		position = { 68 0 }
		parentanchor = bottom
		state = {
			name = _show
			
			animation = {
				alpha = 0
			}
			next = fadein
		}
		
		state = {
			name = fadein
			
			animation = {
				alpha = 1
			}
			#duration = 0.25
		}
		state = {
			name = _hide
			
			animation = {
				alpha = 0
			}
			start_sound = {
				soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_tab_close"
			}
			on_start = "[GetVariableSystem.Clear( 'destablize_up' )]"
			on_start = "[GetVariableSystem.Clear( 'reparations_up' )]"
			on_start = "[GetVariableSystem.Clear( 'delegitimize_up' )]"
			on_start = "[GetVariableSystem.Clear( 'steal_knowledge_up' )]"
			on_start = "[GetVariableSystem.Clear( 'extort_population_up' )]"
			#duration = 0.2
		}
		movable = no
		alwaystransparent = no
		visible = "[GetVariableSystem.HasValue( 'show_alternative_peace_deals', 'yes' )]"
		vbox = {
			using = MainWindowHeaderBoxCenteredNew
				
			blockoverride "Title_text" { text = "[WarOverview.GetWar.GetName]" }
			blockoverride "White_buttons" {
				button_close = {
					name = "the_close"
					datacontext = "[GetScriptedGui('remove_war_lists_button')]"
					onclick = "[GetVariableSystem.Set( 'show_alternative_peace_deals', 'no' )]"
					onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Player.MakeScope ).End )]"
					tooltip = "CLOSE"
				}
			}
			vbox = {
				layoutpolicy_vertical = expanding
			}		
		}
		#Top Flags
		country_flag = {
			position = { 3 56 }
			parentanchor = top|left
			tooltip = "[WarOverview.GetWar.GetDefenderWarLeader.GetName]"
			datacontext = "[GetScriptedGui('select_peace_recipient_country_defender')]"
			
			blockoverride "flag"
			{
				texture = "[WarOverview.GetWar.GetDefenderWarLeader.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
				frame = "[WarOverview.GetWar.GetDefenderWarLeader.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
				framesize = { 120 120 }
			}
			
			blockoverride "size"
			{
				size = { 80 80 }
			}
			
			blockoverride "show_as_button"
			{
				visible = yes
			}
			blockoverride "show_as_icon"
			{
				visible = yes
			}
			onmousehierarchyenter = "[SetHighlightCountry(WarOverview.GetWar.GetDefenderWarLeader.GetCountry)]"
			onmousehierarchyleave = "[ClearHighlightColors]"
			blockoverride "click"
			{
				onclick = "[GetVariableSystem.Set( 'recipient_country_defender', WarOverview.GetWar.GetDefenderWarLeader.GetTag )]"
				onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( WarOverview.GetWar.GetDefenderWarLeader.MakeScope ).AddScope('war', WarOverview.GetWar.MakeScope).End )]"
			}
			icon = {
				using = black_background
				size = { 86 86 }
				position = { 0 3 }
				parentanchor = right
				visible = "[Not(GetVariableSystem.HasValue( 'recipient_country_defender', WarOverview.GetWar.GetDefenderWarLeader.GetTag ))]"
				modify_texture = {
					name = "linealpha"
					texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
					blend_mode = alphamultiply
				}
			}
		}
		country_flag = {
			position = { -3 56 }
			parentanchor = top|right
			tooltip = "[WarOverview.GetWar.GetAttackerWarLeader.GetName]"
			datacontext = "[GetScriptedGui('select_peace_recipient_country_attacker')]"
			
			blockoverride "flag"
			{
				texture = "[WarOverview.GetWar.GetAttackerWarLeader.AccessCoatOfArms.GetTexture('(int32)120','(int32)120')]"
				frame = "[WarOverview.GetWar.GetAttackerWarLeader.AccessCoatOfArms.GetFrame('(int32)120','(int32)120')]"
				framesize = { 120 120 }
			}
			
			blockoverride "size"
			{
				size = { 80 80 }
			}
			
			blockoverride "show_as_button"
			{
				visible = yes
			}
			blockoverride "show_as_icon"
			{
				visible = yes
			}
			onmousehierarchyenter = "[SetHighlightCountry(WarOverview.GetWar.GetAttackerWarLeader.GetCountry)]"
			onmousehierarchyleave = "[ClearHighlightColors]"
			blockoverride "click"
			{
				onclick = "[GetVariableSystem.Set( 'recipient_country_attacker', WarOverview.GetWar.GetAttackerWarLeader.GetTag )]"
				onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( WarOverview.GetWar.GetAttackerWarLeader.MakeScope ).AddScope('war', WarOverview.GetWar.MakeScope).End )]"
			}
			icon = {
				using = black_background
				size = { 86 86 }
				position = { 0 3 }
				parentanchor = right
				visible = "[Not(GetVariableSystem.HasValue( 'recipient_country_attacker', WarOverview.GetWar.GetAttackerWarLeader.GetTag ))]"
				modify_texture = {
					name = "linealpha"
					texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
					blend_mode = alphamultiply
				}
			}
		}
		#Bottom Flags
		scrollarea = {
			size = { 62 550 }
			position = { 8 138 }
			scrollbarpolicy_horizontal = always_off
			using = VerticalScrollAreaCutOff
			scrollbar_vertical = {
				using = VerticalScrollBar
			}
			
			scrollwidget = {
				dynamicgridbox = {
					position = { 0 0 }
					parentanchor = hcenter
					datamodel = "[Player.MakeScope.GetList('war_defender_list')]"
					
					item = {
						country_flag = {
							datacontext = "[GetScriptedGui('select_peace_recipient_country_defender')]"
							tooltip = "[Scope.Country.GetName]"
							blockoverride "flag"
							{
								texture = "[Scope.Country.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
								frame = "[Scope.Country.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
								framesize = { 56 56 }
							}
							
							blockoverride "size"
							{
								size = { 56 56 }
							}
							blockoverride "show_as_button"
							{
								visible = yes
							}
							blockoverride "show_as_icon"
							{
								visible = yes
							}
							onmousehierarchyenter = "[SetHighlightCountry(Scope.GetCountry)]"
							onmousehierarchyleave = "[ClearHighlightColors]"
							blockoverride "click"
							{
								onclick = "[GetVariableSystem.Set( 'recipient_country_defender', Scope.GetCountry.GetTag )]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Scope.Country.MakeScope ).AddScope('war', WarOverview.GetWar.MakeScope).End )]"
							}
	        				icon = {
								using = black_background
								size = { 86 86 }
								position = { 0 0 }
								parentanchor = right
								visible = "[Not(GetVariableSystem.HasValue( 'recipient_country_defender', Scope.GetCountry.GetTag ))]"
								modify_texture = {
									name = "linealpha"
									texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
									blend_mode = alphamultiply
								}
							}	
						}
					}
				}
			}
		}

		scrollarea = {
			position = { -8 138 }
			size = { 62 550 }
			scrollbarpolicy_horizontal = always_off
			parentanchor = top|right
			using = VerticalScrollAreaCutOff
			scrollbar_vertical = {
				using = VerticalScrollBar
			}
			
			scrollwidget = {
				dynamicgridbox = {
					datamodel = "[Player.MakeScope.GetList('war_attacker_list')]"
					parentanchor = hcenter
					item = {
						country_flag = {
							datacontext = "[GetScriptedGui('select_peace_recipient_country_attacker')]"
							tooltip = "[Scope.Country.GetName]"
							blockoverride "flag"
							{
								texture = "[Scope.Country.AccessCoatOfArms.GetTexture('(int32)56','(int32)56')]"
								frame = "[Scope.Country.AccessCoatOfArms.GetFrame('(int32)56','(int32)56')]"
								framesize = { 56 56 }
							}
							
							blockoverride "size"
							{
								size = { 56 56 }
							}
							
							blockoverride "show_as_button"
							{
								visible = yes
							}
							blockoverride "show_as_icon"
							{
								visible = yes
							}
							onmousehierarchyenter = "[SetHighlightCountry(Scope.GetCountry)]"
							onmousehierarchyleave = "[ClearHighlightColors]"
							blockoverride "click"
							{
								onclick = "[GetVariableSystem.Set( 'recipient_country_attacker', Scope.GetCountry.GetTag )]"
								onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( Scope.Country.MakeScope ).AddScope('war', WarOverview.GetWar.MakeScope).End )]"
							}
	        				icon = {
								using = black_background
								size = { 86 86 }
								position = { 0 0 }
								parentanchor = right
								visible = "[Not(GetVariableSystem.HasValue( 'recipient_country_attacker', Scope.GetCountry.GetTag ))]"
								modify_texture = {
									name = "linealpha"
									texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
									blend_mode = alphamultiply
								}
							}
						}
					}
				}
			}
		}
		#POSITIVE WARSCORE BAR
		flowcontainer = {
			visible = "[GreaterThan_int32( WarOverview.GetWarScore, '(int32)0' )]"
			parentanchor = center
			position = { 10 -220 }
			fixed_size_progressbar_war_score = {
				blockoverride "ProgressColor" { using = green_color }
				blockoverride "TotalSize" { size = { 570 81 } }
				blockoverride "Icon" { 
					texture = "gfx/interface/icons/shared_icons/warscore_cost.dds"
					size = { 60 60 } 
					position = { 245 -73 }
				}
				blockoverride "Value" { value = "[IntToFloat( WarOverview.GetWarScore )]" }
				blockoverride "Text" { position = { 0 -5 } text = "[WarOverview.GetWarScore]" }
				tooltip = "[WarOverview.GetWarScoreTooltip]"
			}
		}
		#NEGATIVE WARSCORE BAR
		flowcontainer = {
			visible = "[LessThanOrEqualTo_int32( WarOverview.GetWarScore, '(int32)0' )]"
			parentanchor = center
			position = { 10 -220 }
			fixed_size_progressbar_war_score = {
				blockoverride "ProgressColor" { using = red_color }
				blockoverride "TotalSize" { size = { 570 81 } }
				blockoverride "Icon" { 
					texture = "gfx/interface/icons/shared_icons/warscore_cost.dds" size = { 60 60 } 
					position = { 245 -73 }
				}
				blockoverride "Value" { 
					value = "[IntToFloat( Abs_int32(WarOverview.GetWarScore) )]" 
				}
				blockoverride "Text" {
					position = { 0 -5 }
					text = "[WarOverview.GetWar.MakeScope.GetVariable('warscore_balance').GetValue|0]"
				} # EGG
				tooltip = "[WarOverview.GetWarScoreTooltip]"
			}
		}
		#Peace Deal buttons
		vbox = {
			position = { 15 -150 }
			layoutpolicy_vertical = expanding
			layoutpolicy_horizontal = expanding
			
			

		}

		PeaceNegotiationBlock = {
		}

		PeaceNegotiationBlock = {
			blockoverride "position" {
				position  = { 175 180 }
			}
			blockoverride "title_text" {
				text = "Attackers' concessions"
			}
			blockoverride "country_list" {
				datamodel = "[Player.MakeScope.GetList('war_attacker_list')]"
			}
			blockoverride "country_item_buttoncontext" {
				datacontext = "[GetScriptedGui('select_attacker_country')]"
			}
			blockoverride "country_item_buttoncontext" {
				datacontext = "[GetScriptedGui('select_attacker_country')]"
			}
			blockoverride "state_list" {
				datamodel = "[Scope.Country.MakeScope.GetList('states_available_from_attacker')]"
			}
			blockoverride "state_item_buttoncontext" {
				datacontext = "[GetScriptedGui('select_state_from_defender')]"
			}
			blockoverride "state_item_rightclick_script" {
				onrightclick = "[GetScriptedGui('select_state_from_attacker_rightclick').Execute( GuiScope.SetRoot( Scope.State.MakeScope ).AddScope('war', WarOverview.GetWar.MakeScope ).End )]"
			}
			blockoverride "province_list" {
				datamodel = "[Scope.GetState.MakeScope.GetList('provinces_available_from_attacker')]"
			}
			blockoverride "province_item_buttoncontext" {
				datacontext = "[GetScriptedGui('select_province_from_attacker')]"
			}
		}

		flowcontainer = {
			position = { -15 145 }
			spacing = 10 
			parentanchor = center
			icon_and_text = {
				size = { 110 0 }
				blockoverride "Icon" { 
					texture = "gfx/interface/icons/shared_icons/warscore_cost.dds" 
				}
				blockoverride "Text" { 
					text = "[GuiScope.SetRoot( WarOverview.GetWar.MakeScope ).ScriptValue('WARSCORE_cost_total_attacker')|1]" # TODO: Make this Custom text that's conditional on if the viewer is attacker or defender
					using = BaseFontL
					using = Black_FontColor
					visible = yes # Var is attacker > 0
				}
				tooltip = "WRITE_ME"
				position = { -30 -184 }
				parentanchor = bottom|right
			}
			
			icon_and_text = {
				size = { 110 0 }
				blockoverride "Icon" { 
					texture = "gfx/interface/icons/shared_icons/aggressive_expansion.dds" 
				}
				blockoverride "Text" { 
					text = "[Player.MakeScope.Var('aggressive_expansion_cost').GetValue|0]" 
					using = BaseFontL
					using = Black_FontColor
				}
				tooltip = "This offer costs #Y [Player.MakeScope.Var('aggressive_expansion_cost').GetValue|1]#! aggressive expansion."
				position = { -30 -148 }
				parentanchor = bottom|right
			}
		}
		text_button_square = {
			parentanchor = center
			position = { 108 205 }
			size = { 225 24 }
			name = "accept_button"
			datacontext = "[GetScriptedGui('send_final_offer_button')]"
			blockoverride "Center_text" { text = "Offer Peace" }
			blockoverride "On_click" { 
				onclick = "[ScriptedGui.Execute( GuiScope.SetRoot( WarOverview.GetWar.MakeScope ).AddScope('player', Player.MakeScope).End )]"
				onclick = "[WarOverview.OnClose]"
				enabled = "[ScriptedGui.IsValid( GuiScope.SetRoot( WarOverview.GetWar.MakeScope ).AddScope('player', Player.MakeScope).End )]"
			}
			tooltip = "[WarOverview.GetWar.MakeScope.GetVariable('war_scope_standin').GetProvince.Custom('peace_ai_acceptance_loc')]" # TODO: Put this in custom loc and break it down by the factors that make up acceptance value
			blockoverride "ClickSound" { clicksound = "event:/SFX/UI/Diplomacy/sfx_ui_diplomacy_peace_minor" }
			widgetanchor = bottom|right
		}
		flowcontainer = {
			parentanchor = center
			position = { 0 270 }
			icon = {
				size = { 663 100 }
				position = { 0 457 }
				texture = "gfx/interface/base_parts/background_noninteractable_texture.dds"
				alpha = 0.95

				
				blockoverride "Margins"
				{
					alpha = 0.95
				}

				parentanchor = hcenter
				visible = "[Not(WarOverview.GetWar.IsCivilWar)]"
			}
		}
		flowcontainer = {
			parentanchor = center
			position = { 0 270 }
			scrollarea = {
				parentanchor = hcenter
				size = { 655 95 }
				name = "description_scrollarea"
				scrollbarpolicy_horizontal = always_off
				
				using = NoninteractableBG
				blockoverride "Margins" { 
					margin = { 4 7 } 
					margin_bottom = 10
				}
				scrollbar_vertical = {
					using = VerticalScrollBar
				}
				
				scrollwidget = {
					textbox = {
						text = "WAR_SCORE_COST_CURRENT_TT"
						multiline = yes
						autoresize = yes
						minimumsize = { 560 0 }
						maximumsize = { 560 -1 }
						using = BaseFontS
						using = Black_FontColor
						elide = right
						fontsize = 16
						margin = { 4 0 }
						#parentanchor = center
					}
				}
			}
		}
	}
}