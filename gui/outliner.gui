@outliner_height = 58

window = {
#base_window_black = {
	gfxtype = windowgfx
	name = "outliner"
	layer = middle_top
	
	parentanchor = top|right
	position = { 3 @outliner_height }

	size = { 275 580 }
	movable = no
	filter_mouse = all
	alwaystransparent = no
	allow_outside = yes

	state = {
		name = "hide"
		trigger_when = "[GetVariableSystem.HasValue('mp_start_screen', 'start')]"
		alpha = 0
	}
	state = {
		name = "show"
		trigger_when = "[Not( GetVariableSystem.HasValue('mp_start_screen', 'start'))]"
		duration = 0.5
		alpha = 1
	}
	background = {
		name = "Shadow"
		texture = "gfx/interface/base_parts/shadows/background_x60bd_shadow_one_corner_v2.dds"
		shaderfile = "gfx/FX/pdxgui_default.shader"
		blend_mode = alphamultiply
		spriteType = Corneredtiled
		spriteborder = { 60 60 }
		#margin_left = -18
		alpha = 0.5			
	}
	background = {
		shaderfile = "gfx/FX/pdxgui_default.shader"
		using = black_background
		spriteType = Corneredtiled
		alpha = 0.95
		#margin_left = -19
		modify_texture = {
			blend_mode = alphamultiply
			texture = "gfx/interface/base_parts/horizontal_gradient_stretch_inverted.dds"
		}
		modify_texture = {
			name = "Alpha"
			texture = "gfx/interface/base_parts/background_x60bd_alpha_one_corner.dds"
			blend_mode = alphamultiply
			spriteType = Corneredtiled
			spriteborder = { 60 60 }
		}
	}	
	
	outline_header = {
		position = { 0 3 }
		size = { 100% 38 }
		blockoverride "Title_text" { text = "OUTLINER" }
		blockoverride "White_buttons" 
		{   
			button_settings = {
				onclick = "[Outliner.ToggleSettingsVisible]"
				tooltip = "OUTLINER_SETTINGS"
			}
		}
	}

	margin_widget = {
		position = { -35 40 }
		size = { 300 536 }
		#margin = { 4 0 }
		filter_mouse = all
		alwaystransparent = no
		state = {
			name = "show_outliner"
			animation = { position = { -35 40 } }
			bezier = { 0.44 1.11 0.74 0.91 }
			trigger_when = "[GetVariableSystem.HasValue('outliner', 'show')]"
			duration = 0.2
		}
		state = {
			name = "hide_outliner"
			animation = { position = { -60 40 } }
			bezier = { 0.44 0.2 0.74 0.91 }
			trigger_when = "[GetVariableSystem.HasValue('outliner', 'hide')]"
			duration = 0.2
		}
		scrollarea = {
			size = { 305 536 }
			scrollbarpolicy_horizontal = always_off
			scrollbar_vertical = {
				using = VerticalScrollBar
			}
			
			blockoverride "BlackVisible" { visible = yes }
			
			scrollwidget = {
				flowcontainer = {
					direction = vertical
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_ACTIVE_WARS')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/buttons/inventions/war.dds" }
										blockoverride "color" { using = red_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_COMBATS')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/buttons/inventions/war.dds" }
										blockoverride "color" { using = blue_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_PLAYER_ARMIES')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/new_icons/color/military.dds" }
										blockoverride "color" { using = green_color }
										blockoverride "action_icon" {
											modify_texture = {
												texture = "[OutlinerItem.GetIcon]"
												blend_mode = alphamultiply
											}
										}
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_AUTOMATED_ARMIES')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/new_icons/color/military.dds" }
										blockoverride "color" { using = green_color }
										blockoverride "action_icon" {
											modify_texture = {
												texture = "gfx/interface/icons/shared_icons/change.dds"
												blend_mode = alphamultiply
											}
										}
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_PLAYER_NAVIES')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/macro_builder/recruit_naval_units.dds" }
										blockoverride "color" { using = blue_color }
										blockoverride "action_icon" {
											modify_texture = {
												texture = "[OutlinerItem.GetIcon]"
												blend_mode = alphamultiply
											}
										}
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_AUTOMATED_NAVIES')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/macro_builder/recruit_naval_units.dds" }
										blockoverride "color" { using = blue_color }
										blockoverride "action_icon" {
											modify_texture = {
												texture = "gfx/interface/icons/shared_icons/change.dds"
												blend_mode = alphamultiply
											}
										}
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_PROVINCIAL_ARMIES')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = green_color }
										blockoverride "action_icon" {
											modify_texture = {
												texture = "[OutlinerItem.GetIcon]"
												blend_mode = alphamultiply
											}
										}
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_DISLOYAL_ARMIES')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = red_color }
										blockoverride "action_icon" {
											modify_texture = {
												texture = "[OutlinerItem.GetIcon]"
												blend_mode = alphamultiply
											}
										}
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_SIEGES_OFFENSIVE')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = green_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_CONSTRUCTIONS_MILITARY')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = green_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_CONSTRUCTIONS_BUILDINGS')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = green_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_SIEGES_DEFENSIVE')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = red_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_DISLOYAL_CHARACTERS')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = red_color }
										blockoverride "action_icon" {
											modify_texture = {
												texture = "[OutlinerItem.GetIcon]"
												blend_mode = alphamultiply
											}
										}
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_FAVORITE_CHARACTERS')))]"
								blockoverride "button" {
									outline_button = { }
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_DISLOYAL_STATES')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = red_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_STATE_INFRASTRUCTURE')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = green_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_PROVINCEMODIFIER')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = green_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_ACTIVE_DIPLOMACY')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = blue_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEGORY_HUMAN_PLAYERS')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/_default.dds" }
										blockoverride "color" { using = blue_color }
									}
								}
							}
						}
					}
					dynamicgridbox = {
						datamodel = "[Outliner.GetCategories]"
						ignoreinvisible = yes
						item = {
							outliner_block = {
								visible = "[And(And(OutlinerCategory.IsVisible,NotEqualTo_int32(OutlinerCategory.GetItemCount,'(int32)0')), EqualTo_string(OutlinerCategory.GetName, Localize('OUTLINER_CATEOGRY_GREAT_WORK')))]"
								blockoverride "button" {
									outline_button = {
										blockoverride "icon" { texture = "gfx/interface/icons/new_icons/color/great_work.dds" }
										blockoverride "color" { using = yellow_color }
									}
								}
							}
						}
					}
				}
			}
		}
	}
	
	button_slide_out = {
		name = "hide_outliner_button"
		position = { -20 11 }
		visible = "[Not(GetVariableSystem.HasValue('outliner', 'hide'))]"
		alwaystransparent = no
		inherit_visual_state = yes
		#onclick = "[PdxGuiTriggerAllAnimations('hide_outliner')]"
		#onclick = "[PdxGuiWidget.Hide]"
		#onclick = "[PdxGuiWidget.AccessParent.FindChild('show_outliner_button').Show]"
		onclick = "[Outliner.OnHideSettings]"
		onclick = "[GetVariableSystem.Set('outliner', 'hide')]"
		### Audio ###
		state = {
			name = _show
			start_sound = {
				soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_outliner_open"
			}
		}
	}
	
	button_slide_in = {
		name = "show_outliner_button"
		position = { -20 11 }
		#visible = no
		visible = "[GetVariableSystem.HasValue('outliner', 'hide')]"
		alwaystransparent = no
		inherit_visual_state = yes
		#onclick = "[PdxGuiTriggerAllAnimations('show_outliner')]"
		#onclick = "[PdxGuiWidget.Hide]"
		#onclick = "[PdxGuiWidget.AccessParent.FindChild('hide_outliner_button').Show]"
		onclick = "[GetVariableSystem.Set('outliner', 'show')]"
		### Audio ###
		state = {
			name = _show
			start_sound = {
				soundeffect = "event:/SFX/UI/Generic/2.0/sfx_ui_window_outliner_close"
			}
		}
	}
	
	state = {
		name = "show_outliner"
		animation = { position = { 3 @outliner_height } }
		bezier = { 0.44 1.11 0.74 0.91 }
		trigger_when = "[GetVariableSystem.HasValue('outliner', 'show')]"
		duration = 0.2
	}
	
	state = {
		name = "hide_outliner"
		animation = { position = { 270 @outliner_height } }
		bezier = { 0.44 0.2 0.74 0.91 }
		trigger_when = "[GetVariableSystem.HasValue('outliner', 'hide')]"
		duration = 0.2
	}
	
}
